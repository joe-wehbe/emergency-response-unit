{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/there/OneDrive/Desktop/ERU - Capstone/Admin/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, Optional, InjectionToken, inject, NgZone, ApplicationRef, Injector, createComponent, TemplateRef, Directive, ContentChild, EventEmitter, ViewContainerRef, EnvironmentInjector, Attribute, SkipSelf, Input, Output, reflectComponentType, HostListener, ElementRef, ViewChild } from '@angular/core';\nimport * as i3 from '@angular/router';\nimport { NavigationStart, PRIMARY_OUTLET, ChildrenOutletContexts, ActivatedRoute, Router } from '@angular/router';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport { isPlatform, getPlatforms, LIFECYCLE_WILL_ENTER, LIFECYCLE_DID_ENTER, LIFECYCLE_WILL_LEAVE, LIFECYCLE_DID_LEAVE, LIFECYCLE_WILL_UNLOAD, componentOnReady } from '@ionic/core/components';\nimport { Subject, fromEvent, BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { __decorate } from 'tslib';\nimport { filter, switchMap, distinctUntilChanged } from 'rxjs/operators';\nimport { NgControl } from '@angular/forms';\nconst _c0 = [\"tabsInner\"];\nclass MenuController {\n  constructor(menuController) {\n    this.menuController = menuController;\n  }\n  /**\n   * Programmatically open the Menu.\n   * @param [menuId]  Optionally get the menu by its id, or side.\n   * @return returns a promise when the menu is fully opened\n   */\n  open(menuId) {\n    return this.menuController.open(menuId);\n  }\n  /**\n   * Programmatically close the Menu. If no `menuId` is given as the first\n   * argument then it'll close any menu which is open. If a `menuId`\n   * is given then it'll close that exact menu.\n   * @param [menuId]  Optionally get the menu by its id, or side.\n   * @return returns a promise when the menu is fully closed\n   */\n  close(menuId) {\n    return this.menuController.close(menuId);\n  }\n  /**\n   * Toggle the menu. If it's closed, it will open, and if opened, it\n   * will close.\n   * @param [menuId]  Optionally get the menu by its id, or side.\n   * @return returns a promise when the menu has been toggled\n   */\n  toggle(menuId) {\n    return this.menuController.toggle(menuId);\n  }\n  /**\n   * Used to enable or disable a menu. For example, there could be multiple\n   * left menus, but only one of them should be able to be opened at the same\n   * time. If there are multiple menus on the same side, then enabling one menu\n   * will also automatically disable all the others that are on the same side.\n   * @param [menuId]  Optionally get the menu by its id, or side.\n   * @return Returns the instance of the menu, which is useful for chaining.\n   */\n  enable(shouldEnable, menuId) {\n    return this.menuController.enable(shouldEnable, menuId);\n  }\n  /**\n   * Used to enable or disable the ability to swipe open the menu.\n   * @param shouldEnable  True if it should be swipe-able, false if not.\n   * @param [menuId]  Optionally get the menu by its id, or side.\n   * @return Returns the instance of the menu, which is useful for chaining.\n   */\n  swipeGesture(shouldEnable, menuId) {\n    return this.menuController.swipeGesture(shouldEnable, menuId);\n  }\n  /**\n   * @param [menuId] Optionally get the menu by its id, or side.\n   * @return Returns true if the specified menu is currently open, otherwise false.\n   * If the menuId is not specified, it returns true if ANY menu is currenly open.\n   */\n  isOpen(menuId) {\n    return this.menuController.isOpen(menuId);\n  }\n  /**\n   * @param [menuId]  Optionally get the menu by its id, or side.\n   * @return Returns true if the menu is currently enabled, otherwise false.\n   */\n  isEnabled(menuId) {\n    return this.menuController.isEnabled(menuId);\n  }\n  /**\n   * Used to get a menu instance. If a `menuId` is not provided then it'll\n   * return the first menu found. If a `menuId` is `left` or `right`, then\n   * it'll return the enabled menu on that side. Otherwise, if a `menuId` is\n   * provided, then it'll try to find the menu using the menu's `id`\n   * property. If a menu is not found then it'll return `null`.\n   * @param [menuId]  Optionally get the menu by its id, or side.\n   * @return Returns the instance of the menu if found, otherwise `null`.\n   */\n  get(menuId) {\n    return this.menuController.get(menuId);\n  }\n  /**\n   * @return Returns the instance of the menu already opened, otherwise `null`.\n   */\n  getOpen() {\n    return this.menuController.getOpen();\n  }\n  /**\n   * @return Returns an array of all menu instances.\n   */\n  getMenus() {\n    return this.menuController.getMenus();\n  }\n}\nclass DomController {\n  /**\n   * Schedules a task to run during the READ phase of the next frame.\n   * This task should only read the DOM, but never modify it.\n   */\n  read(cb) {\n    getQueue().read(cb);\n  }\n  /**\n   * Schedules a task to run during the WRITE phase of the next frame.\n   * This task should write the DOM, but never READ it.\n   */\n  write(cb) {\n    getQueue().write(cb);\n  }\n}\n/** @nocollapse */\nDomController.ɵfac = function DomController_Factory(t) {\n  return new (t || DomController)();\n};\n/** @nocollapse */\nDomController.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomController,\n  factory: DomController.ɵfac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomController, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nconst getQueue = () => {\n  const win = typeof window !== 'undefined' ? window : null;\n  if (win != null) {\n    const Ionic = win.Ionic;\n    if (Ionic !== null && Ionic !== void 0 && Ionic.queue) {\n      return Ionic.queue;\n    }\n    return {\n      read: cb => win.requestAnimationFrame(cb),\n      write: cb => win.requestAnimationFrame(cb)\n    };\n  }\n  return {\n    read: cb => cb(),\n    write: cb => cb()\n  };\n};\nclass Platform {\n  constructor(doc, zone) {\n    this.doc = doc;\n    /**\n     * @hidden\n     */\n    this.backButton = new Subject();\n    /**\n     * The keyboardDidShow event emits when the\n     * on-screen keyboard is presented.\n     */\n    this.keyboardDidShow = new Subject();\n    /**\n     * The keyboardDidHide event emits when the\n     * on-screen keyboard is hidden.\n     */\n    this.keyboardDidHide = new Subject();\n    /**\n     * The pause event emits when the native platform puts the application\n     * into the background, typically when the user switches to a different\n     * application. This event would emit when a Cordova app is put into\n     * the background, however, it would not fire on a standard web browser.\n     */\n    this.pause = new Subject();\n    /**\n     * The resume event emits when the native platform pulls the application\n     * out from the background. This event would emit when a Cordova app comes\n     * out from the background, however, it would not fire on a standard web browser.\n     */\n    this.resume = new Subject();\n    /**\n     * The resize event emits when the browser window has changed dimensions. This\n     * could be from a browser window being physically resized, or from a device\n     * changing orientation.\n     */\n    this.resize = new Subject();\n    zone.run(() => {\n      var _this$win;\n      this.win = doc.defaultView;\n      this.backButton.subscribeWithPriority = function (priority, callback) {\n        return this.subscribe(ev => {\n          return ev.register(priority, processNextHandler => zone.run(() => callback(processNextHandler)));\n        });\n      };\n      proxyEvent(this.pause, doc, 'pause', zone);\n      proxyEvent(this.resume, doc, 'resume', zone);\n      proxyEvent(this.backButton, doc, 'ionBackButton', zone);\n      proxyEvent(this.resize, this.win, 'resize', zone);\n      proxyEvent(this.keyboardDidShow, this.win, 'ionKeyboardDidShow', zone);\n      proxyEvent(this.keyboardDidHide, this.win, 'ionKeyboardDidHide', zone);\n      let readyResolve;\n      this._readyPromise = new Promise(res => {\n        readyResolve = res;\n      });\n      if ((_this$win = this.win) !== null && _this$win !== void 0 && _this$win['cordova']) {\n        doc.addEventListener('deviceready', () => {\n          readyResolve('cordova');\n        }, {\n          once: true\n        });\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        readyResolve('dom');\n      }\n    });\n  }\n  /**\n   * @returns returns true/false based on platform.\n   * @description\n   * Depending on the platform the user is on, `is(platformName)` will\n   * return `true` or `false`. Note that the same app can return `true`\n   * for more than one platform name. For example, an app running from\n   * an iPad would return `true` for the platform names: `mobile`,\n   * `ios`, `ipad`, and `tablet`. Additionally, if the app was running\n   * from Cordova then `cordova` would be true, and if it was running\n   * from a web browser on the iPad then `mobileweb` would be `true`.\n   *\n   * ```\n   * import { Platform } from 'ionic-angular';\n   *\n   * @Component({...})\n   * export MyPage {\n   *   constructor(public platform: Platform) {\n   *     if (this.platform.is('ios')) {\n   *       // This will only print when on iOS\n   *       console.log('I am an iOS device!');\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * | Platform Name   | Description                        |\n   * |-----------------|------------------------------------|\n   * | android         | on a device running Android.       |\n   * | capacitor       | on a device running Capacitor.     |\n   * | cordova         | on a device running Cordova.       |\n   * | ios             | on a device running iOS.           |\n   * | ipad            | on an iPad device.                 |\n   * | iphone          | on an iPhone device.               |\n   * | phablet         | on a phablet device.               |\n   * | tablet          | on a tablet device.                |\n   * | electron        | in Electron on a desktop device.   |\n   * | pwa             | as a PWA app.                      |\n   * | mobile          | on a mobile device.                |\n   * | mobileweb       | on a mobile device in a browser.   |\n   * | desktop         | on a desktop device.               |\n   * | hybrid          | is a cordova or capacitor app.     |\n   *\n   */\n  is(platformName) {\n    return isPlatform(this.win, platformName);\n  }\n  /**\n   * @returns the array of platforms\n   * @description\n   * Depending on what device you are on, `platforms` can return multiple values.\n   * Each possible value is a hierarchy of platforms. For example, on an iPhone,\n   * it would return `mobile`, `ios`, and `iphone`.\n   *\n   * ```\n   * import { Platform } from 'ionic-angular';\n   *\n   * @Component({...})\n   * export MyPage {\n   *   constructor(public platform: Platform) {\n   *     // This will print an array of the current platforms\n   *     console.log(this.platform.platforms());\n   *   }\n   * }\n   * ```\n   */\n  platforms() {\n    return getPlatforms(this.win);\n  }\n  /**\n   * Returns a promise when the platform is ready and native functionality\n   * can be called. If the app is running from within a web browser, then\n   * the promise will resolve when the DOM is ready. When the app is running\n   * from an application engine such as Cordova, then the promise will\n   * resolve when Cordova triggers the `deviceready` event.\n   *\n   * The resolved value is the `readySource`, which states which platform\n   * ready was used. For example, when Cordova is ready, the resolved ready\n   * source is `cordova`. The default ready source value will be `dom`. The\n   * `readySource` is useful if different logic should run depending on the\n   * platform the app is running from. For example, only Cordova can execute\n   * the status bar plugin, so the web should not run status bar plugin logic.\n   *\n   * ```\n   * import { Component } from '@angular/core';\n   * import { Platform } from 'ionic-angular';\n   *\n   * @Component({...})\n   * export MyApp {\n   *   constructor(public platform: Platform) {\n   *     this.platform.ready().then((readySource) => {\n   *       console.log('Platform ready from', readySource);\n   *       // Platform now ready, execute any required native code\n   *     });\n   *   }\n   * }\n   * ```\n   */\n  ready() {\n    return this._readyPromise;\n  }\n  /**\n   * Returns if this app is using right-to-left language direction or not.\n   * We recommend the app's `index.html` file already has the correct `dir`\n   * attribute value set, such as `<html dir=\"ltr\">` or `<html dir=\"rtl\">`.\n   * [W3C: Structural markup and right-to-left text in HTML](http://www.w3.org/International/questions/qa-html-dir)\n   */\n  get isRTL() {\n    return this.doc.dir === 'rtl';\n  }\n  /**\n   * Get the query string parameter\n   */\n  getQueryParam(key) {\n    return readQueryParam(this.win.location.href, key);\n  }\n  /**\n   * Returns `true` if the app is in landscape mode.\n   */\n  isLandscape() {\n    return !this.isPortrait();\n  }\n  /**\n   * Returns `true` if the app is in portrait mode.\n   */\n  isPortrait() {\n    var _this$win$matchMedia, _this$win2;\n    return (_this$win$matchMedia = (_this$win2 = this.win).matchMedia) === null || _this$win$matchMedia === void 0 ? void 0 : _this$win$matchMedia.call(_this$win2, '(orientation: portrait)').matches;\n  }\n  testUserAgent(expression) {\n    const nav = this.win.navigator;\n    return !!(nav !== null && nav !== void 0 && nav.userAgent && nav.userAgent.indexOf(expression) >= 0);\n  }\n  /**\n   * Get the current url.\n   */\n  url() {\n    return this.win.location.href;\n  }\n  /**\n   * Gets the width of the platform's viewport using `window.innerWidth`.\n   */\n  width() {\n    return this.win.innerWidth;\n  }\n  /**\n   * Gets the height of the platform's viewport using `window.innerHeight`.\n   */\n  height() {\n    return this.win.innerHeight;\n  }\n}\n/** @nocollapse */\nPlatform.ɵfac = function Platform_Factory(t) {\n  return new (t || Platform)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i0.NgZone));\n};\n/** @nocollapse */\nPlatform.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: Platform,\n  factory: Platform.ɵfac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Platform, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\nconst readQueryParam = (url, key) => {\n  key = key.replace(/[[\\]\\\\]/g, '\\\\$&');\n  const regex = new RegExp('[\\\\?&]' + key + '=([^&#]*)');\n  const results = regex.exec(url);\n  return results ? decodeURIComponent(results[1].replace(/\\+/g, ' ')) : null;\n};\nconst proxyEvent = (emitter, el, eventName, zone) => {\n  if (el) {\n    el.addEventListener(eventName, ev => {\n      /**\n       * `zone.run` is required to make sure that we are running inside the Angular zone\n       * at all times. This is necessary since an app that has Capacitor will\n       * override the `document.addEventListener` with its own implementation.\n       * The override causes the event to no longer be in the Angular zone.\n       */\n      zone.run(() => {\n        // ?? cordova might emit \"null\" events\n        const value = ev != null ? ev.detail : undefined;\n        emitter.next(value);\n      });\n    });\n  }\n};\nclass NavController {\n  constructor(platform, location, serializer, router) {\n    this.location = location;\n    this.serializer = serializer;\n    this.router = router;\n    this.direction = DEFAULT_DIRECTION;\n    this.animated = DEFAULT_ANIMATED;\n    this.guessDirection = 'forward';\n    this.lastNavId = -1;\n    // Subscribe to router events to detect direction\n    if (router) {\n      router.events.subscribe(ev => {\n        if (ev instanceof NavigationStart) {\n          const id = ev.restoredState ? ev.restoredState.navigationId : ev.id;\n          this.guessDirection = id < this.lastNavId ? 'back' : 'forward';\n          this.guessAnimation = !ev.restoredState ? this.guessDirection : undefined;\n          this.lastNavId = this.guessDirection === 'forward' ? ev.id : id;\n        }\n      });\n    }\n    // Subscribe to backButton events\n    platform.backButton.subscribeWithPriority(0, processNextHandler => {\n      this.pop();\n      processNextHandler();\n    });\n  }\n  /**\n   * This method uses Angular's [Router](https://angular.io/api/router/Router) under the hood,\n   * it's equivalent to calling `this.router.navigateByUrl()`, but it's explicit about the **direction** of the transition.\n   *\n   * Going **forward** means that a new page is going to be pushed to the stack of the outlet (ion-router-outlet),\n   * and that it will show a \"forward\" animation by default.\n   *\n   * Navigating forward can also be triggered in a declarative manner by using the `[routerDirection]` directive:\n   *\n   * ```html\n   * <a routerLink=\"/path/to/page\" routerDirection=\"forward\">Link</a>\n   * ```\n   */\n  navigateForward(url, options = {}) {\n    this.setDirection('forward', options.animated, options.animationDirection, options.animation);\n    return this.navigate(url, options);\n  }\n  /**\n   * This method uses Angular's [Router](https://angular.io/api/router/Router) under the hood,\n   * it's equivalent to calling:\n   *\n   * ```ts\n   * this.navController.setDirection('back');\n   * this.router.navigateByUrl(path);\n   * ```\n   *\n   * Going **back** means that all the pages in the stack until the navigated page is found will be popped,\n   * and that it will show a \"back\" animation by default.\n   *\n   * Navigating back can also be triggered in a declarative manner by using the `[routerDirection]` directive:\n   *\n   * ```html\n   * <a routerLink=\"/path/to/page\" routerDirection=\"back\">Link</a>\n   * ```\n   */\n  navigateBack(url, options = {}) {\n    this.setDirection('back', options.animated, options.animationDirection, options.animation);\n    return this.navigate(url, options);\n  }\n  /**\n   * This method uses Angular's [Router](https://angular.io/api/router/Router) under the hood,\n   * it's equivalent to calling:\n   *\n   * ```ts\n   * this.navController.setDirection('root');\n   * this.router.navigateByUrl(path);\n   * ```\n   *\n   * Going **root** means that all existing pages in the stack will be removed,\n   * and the navigated page will become the single page in the stack.\n   *\n   * Navigating root can also be triggered in a declarative manner by using the `[routerDirection]` directive:\n   *\n   * ```html\n   * <a routerLink=\"/path/to/page\" routerDirection=\"root\">Link</a>\n   * ```\n   */\n  navigateRoot(url, options = {}) {\n    this.setDirection('root', options.animated, options.animationDirection, options.animation);\n    return this.navigate(url, options);\n  }\n  /**\n   * Same as [Location](https://angular.io/api/common/Location)'s back() method.\n   * It will use the standard `window.history.back()` under the hood, but featuring a `back` animation\n   * by default.\n   */\n  back(options = {\n    animated: true,\n    animationDirection: 'back'\n  }) {\n    this.setDirection('back', options.animated, options.animationDirection, options.animation);\n    return this.location.back();\n  }\n  /**\n   * This methods goes back in the context of Ionic's stack navigation.\n   *\n   * It recursively finds the top active `ion-router-outlet` and calls `pop()`.\n   * This is the recommended way to go back when you are using `ion-router-outlet`.\n   *\n   * Resolves to `true` if it was able to pop.\n   */\n  pop() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let outlet = _this.topOutlet;\n      while (outlet) {\n        if (yield outlet.pop()) {\n          return true;\n        } else {\n          outlet = outlet.parentOutlet;\n        }\n      }\n      return false;\n    })();\n  }\n  /**\n   * This methods specifies the direction of the next navigation performed by the Angular router.\n   *\n   * `setDirection()` does not trigger any transition, it just sets some flags to be consumed by `ion-router-outlet`.\n   *\n   * It's recommended to use `navigateForward()`, `navigateBack()` and `navigateRoot()` instead of `setDirection()`.\n   */\n  setDirection(direction, animated, animationDirection, animationBuilder) {\n    this.direction = direction;\n    this.animated = getAnimation(direction, animated, animationDirection);\n    this.animationBuilder = animationBuilder;\n  }\n  /**\n   * @internal\n   */\n  setTopOutlet(outlet) {\n    this.topOutlet = outlet;\n  }\n  /**\n   * @internal\n   */\n  consumeTransition() {\n    let direction = 'root';\n    let animation;\n    const animationBuilder = this.animationBuilder;\n    if (this.direction === 'auto') {\n      direction = this.guessDirection;\n      animation = this.guessAnimation;\n    } else {\n      animation = this.animated;\n      direction = this.direction;\n    }\n    this.direction = DEFAULT_DIRECTION;\n    this.animated = DEFAULT_ANIMATED;\n    this.animationBuilder = undefined;\n    return {\n      direction,\n      animation,\n      animationBuilder\n    };\n  }\n  navigate(url, options) {\n    if (Array.isArray(url)) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return this.router.navigate(url, options);\n    } else {\n      /**\n       * navigateByUrl ignores any properties that\n       * would change the url, so things like queryParams\n       * would be ignored unless we create a url tree\n       * More Info: https://github.com/angular/angular/issues/18798\n       */\n      const urlTree = this.serializer.parse(url.toString());\n      if (options.queryParams !== undefined) {\n        urlTree.queryParams = {\n          ...options.queryParams\n        };\n      }\n      if (options.fragment !== undefined) {\n        urlTree.fragment = options.fragment;\n      }\n      /**\n       * `navigateByUrl` will still apply `NavigationExtras` properties\n       * that do not modify the url, such as `replaceUrl` which is why\n       * `options` is passed in here.\n       */\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return this.router.navigateByUrl(urlTree, options);\n    }\n  }\n}\n/** @nocollapse */\nNavController.ɵfac = function NavController_Factory(t) {\n  return new (t || NavController)(i0.ɵɵinject(Platform), i0.ɵɵinject(i1.Location), i0.ɵɵinject(i3.UrlSerializer), i0.ɵɵinject(i3.Router, 8));\n};\n/** @nocollapse */\nNavController.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NavController,\n  factory: NavController.ɵfac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NavController, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: Platform\n    }, {\n      type: i1.Location\n    }, {\n      type: i3.UrlSerializer\n    }, {\n      type: i3.Router,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\nconst getAnimation = (direction, animated, animationDirection) => {\n  if (animated === false) {\n    return undefined;\n  }\n  if (animationDirection !== undefined) {\n    return animationDirection;\n  }\n  if (direction === 'forward' || direction === 'back') {\n    return direction;\n  } else if (direction === 'root' && animated === true) {\n    return 'forward';\n  }\n  return undefined;\n};\nconst DEFAULT_DIRECTION = 'auto';\nconst DEFAULT_ANIMATED = undefined;\nclass Config {\n  get(key, fallback) {\n    const c = getConfig();\n    if (c) {\n      return c.get(key, fallback);\n    }\n    return null;\n  }\n  getBoolean(key, fallback) {\n    const c = getConfig();\n    if (c) {\n      return c.getBoolean(key, fallback);\n    }\n    return false;\n  }\n  getNumber(key, fallback) {\n    const c = getConfig();\n    if (c) {\n      return c.getNumber(key, fallback);\n    }\n    return 0;\n  }\n}\n/** @nocollapse */\nConfig.ɵfac = function Config_Factory(t) {\n  return new (t || Config)();\n};\n/** @nocollapse */\nConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: Config,\n  factory: Config.ɵfac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Config, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nconst ConfigToken = new InjectionToken('USERCONFIG');\nconst getConfig = () => {\n  if (typeof window !== 'undefined') {\n    const Ionic = window.Ionic;\n    if (Ionic !== null && Ionic !== void 0 && Ionic.config) {\n      return Ionic.config;\n    }\n  }\n  return null;\n};\n\n/**\n * @description\n * NavParams are an object that exists on a page and can contain data for that particular view.\n * Similar to how data was pass to a view in V1 with `$stateParams`, NavParams offer a much more flexible\n * option with a simple `get` method.\n *\n * @usage\n * ```ts\n * import { NavParams } from '@ionic/angular';\n *\n * export class MyClass{\n *\n *  constructor(navParams: NavParams){\n *    // userParams is an object we have in our nav-parameters\n *    navParams.get('userParams');\n *  }\n *\n * }\n * ```\n */\nclass NavParams {\n  constructor(data = {}) {\n    this.data = data;\n  }\n  /**\n   * Get the value of a nav-parameter for the current view\n   *\n   * ```ts\n   * import { NavParams } from 'ionic-angular';\n   *\n   * export class MyClass{\n   *  constructor(public navParams: NavParams){\n   *    // userParams is an object we have in our nav-parameters\n   *    this.navParams.get('userParams');\n   *  }\n   * }\n   * ```\n   *\n   * @param param Which param you want to look up\n   */\n  get(param) {\n    return this.data[param];\n  }\n}\n\n// TODO(FW-2827): types\nclass AngularDelegate {\n  constructor() {\n    this.zone = inject(NgZone);\n    this.applicationRef = inject(ApplicationRef);\n  }\n  create(environmentInjector, injector, elementReferenceKey) {\n    return new AngularFrameworkDelegate(environmentInjector, injector, this.applicationRef, this.zone, elementReferenceKey);\n  }\n}\n/** @nocollapse */\nAngularDelegate.ɵfac = function AngularDelegate_Factory(t) {\n  return new (t || AngularDelegate)();\n};\n/** @nocollapse */\nAngularDelegate.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AngularDelegate,\n  factory: AngularDelegate.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularDelegate, [{\n    type: Injectable\n  }], null, null);\n})();\nclass AngularFrameworkDelegate {\n  constructor(environmentInjector, injector, applicationRef, zone, elementReferenceKey) {\n    this.environmentInjector = environmentInjector;\n    this.injector = injector;\n    this.applicationRef = applicationRef;\n    this.zone = zone;\n    this.elementReferenceKey = elementReferenceKey;\n    this.elRefMap = new WeakMap();\n    this.elEventsMap = new WeakMap();\n  }\n  attachViewToDom(container, component, params, cssClasses) {\n    return this.zone.run(() => {\n      return new Promise(resolve => {\n        const componentProps = {\n          ...params\n        };\n        /**\n         * Ionic Angular passes a reference to a modal\n         * or popover that can be accessed using a\n         * variable in the overlay component. If\n         * elementReferenceKey is defined, then we should\n         * pass a reference to the component using\n         * elementReferenceKey as the key.\n         */\n        if (this.elementReferenceKey !== undefined) {\n          componentProps[this.elementReferenceKey] = container;\n        }\n        const el = attachView(this.zone, this.environmentInjector, this.injector, this.applicationRef, this.elRefMap, this.elEventsMap, container, component, componentProps, cssClasses, this.elementReferenceKey);\n        resolve(el);\n      });\n    });\n  }\n  removeViewFromDom(_container, component) {\n    return this.zone.run(() => {\n      return new Promise(resolve => {\n        const componentRef = this.elRefMap.get(component);\n        if (componentRef) {\n          componentRef.destroy();\n          this.elRefMap.delete(component);\n          const unbindEvents = this.elEventsMap.get(component);\n          if (unbindEvents) {\n            unbindEvents();\n            this.elEventsMap.delete(component);\n          }\n        }\n        resolve();\n      });\n    });\n  }\n}\nconst attachView = (zone, environmentInjector, injector, applicationRef, elRefMap, elEventsMap, container, component, params, cssClasses, elementReferenceKey) => {\n  /**\n   * Wraps the injector with a custom injector that\n   * provides NavParams to the component.\n   *\n   * NavParams is a legacy feature from Ionic v3 that allows\n   * Angular developers to provide data to a component\n   * and access it by providing NavParams as a dependency\n   * in the constructor.\n   *\n   * The modern approach is to access the data directly\n   * from the component's class instance.\n   */\n  const childInjector = Injector.create({\n    providers: getProviders(params),\n    parent: injector\n  });\n  const componentRef = createComponent(component, {\n    environmentInjector,\n    elementInjector: childInjector\n  });\n  const instance = componentRef.instance;\n  const hostElement = componentRef.location.nativeElement;\n  if (params) {\n    /**\n     * For modals and popovers, a reference to the component is\n     * added to `params` during the call to attachViewToDom. If\n     * a reference using this name is already set, this means\n     * the app is trying to use the name as a component prop,\n     * which will cause collisions.\n     */\n    if (elementReferenceKey && instance[elementReferenceKey] !== undefined) {\n      console.error(`[Ionic Error]: ${elementReferenceKey} is a reserved property when using ${container.tagName.toLowerCase()}. Rename or remove the \"${elementReferenceKey}\" property from ${component.name}.`);\n    }\n    Object.assign(instance, params);\n  }\n  if (cssClasses) {\n    for (const cssClass of cssClasses) {\n      hostElement.classList.add(cssClass);\n    }\n  }\n  const unbindEvents = bindLifecycleEvents(zone, instance, hostElement);\n  container.appendChild(hostElement);\n  applicationRef.attachView(componentRef.hostView);\n  elRefMap.set(hostElement, componentRef);\n  elEventsMap.set(hostElement, unbindEvents);\n  return hostElement;\n};\nconst LIFECYCLES = [LIFECYCLE_WILL_ENTER, LIFECYCLE_DID_ENTER, LIFECYCLE_WILL_LEAVE, LIFECYCLE_DID_LEAVE, LIFECYCLE_WILL_UNLOAD];\nconst bindLifecycleEvents = (zone, instance, element) => {\n  return zone.run(() => {\n    const unregisters = LIFECYCLES.filter(eventName => typeof instance[eventName] === 'function').map(eventName => {\n      const handler = ev => instance[eventName](ev.detail);\n      element.addEventListener(eventName, handler);\n      return () => element.removeEventListener(eventName, handler);\n    });\n    return () => unregisters.forEach(fn => fn());\n  });\n};\nconst NavParamsToken = new InjectionToken('NavParamsToken');\nconst getProviders = params => {\n  return [{\n    provide: NavParamsToken,\n    useValue: params\n  }, {\n    provide: NavParams,\n    useFactory: provideNavParamsInjectable,\n    deps: [NavParamsToken]\n  }];\n};\nconst provideNavParamsInjectable = params => {\n  return new NavParams(params);\n};\n\n// TODO: Is there a way we can grab this from angular-component-lib instead?\nconst proxyInputs = (Cmp, inputs) => {\n  const Prototype = Cmp.prototype;\n  inputs.forEach(item => {\n    Object.defineProperty(Prototype, item, {\n      get() {\n        return this.el[item];\n      },\n      set(val) {\n        this.z.runOutsideAngular(() => this.el[item] = val);\n      }\n    });\n  });\n};\nconst proxyMethods = (Cmp, methods) => {\n  const Prototype = Cmp.prototype;\n  methods.forEach(methodName => {\n    Prototype[methodName] = function () {\n      const args = arguments;\n      return this.z.runOutsideAngular(() => this.el[methodName].apply(this.el, args));\n    };\n  });\n};\nconst proxyOutputs = (instance, el, events) => {\n  events.forEach(eventName => instance[eventName] = fromEvent(el, eventName));\n};\n// tslint:disable-next-line: only-arrow-functions\nfunction ProxyCmp(opts) {\n  const decorator = function (cls) {\n    const {\n      defineCustomElementFn,\n      inputs,\n      methods\n    } = opts;\n    if (defineCustomElementFn !== undefined) {\n      defineCustomElementFn();\n    }\n    if (inputs) {\n      proxyInputs(cls, inputs);\n    }\n    if (methods) {\n      proxyMethods(cls, methods);\n    }\n    return cls;\n  };\n  return decorator;\n}\nconst POPOVER_INPUTS = ['alignment', 'animated', 'arrow', 'keepContentsMounted', 'backdropDismiss', 'cssClass', 'dismissOnSelect', 'enterAnimation', 'event', 'isOpen', 'keyboardClose', 'leaveAnimation', 'mode', 'showBackdrop', 'translucent', 'trigger', 'triggerAction', 'reference', 'size', 'side'];\nconst POPOVER_METHODS = ['present', 'dismiss', 'onDidDismiss', 'onWillDismiss'];\nlet IonPopover = class IonPopover {\n  constructor(c, r, z) {\n    this.z = z;\n    this.isCmpOpen = false;\n    this.el = r.nativeElement;\n    this.el.addEventListener('ionMount', () => {\n      this.isCmpOpen = true;\n      c.detectChanges();\n    });\n    this.el.addEventListener('didDismiss', () => {\n      this.isCmpOpen = false;\n      c.detectChanges();\n    });\n    proxyOutputs(this, this.el, ['ionPopoverDidPresent', 'ionPopoverWillPresent', 'ionPopoverWillDismiss', 'ionPopoverDidDismiss', 'didPresent', 'willPresent', 'willDismiss', 'didDismiss']);\n  }\n};\n/** @nocollapse */\nIonPopover.ɵfac = function IonPopover_Factory(t) {\n  return new (t || IonPopover)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n/** @nocollapse */\nIonPopover.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: IonPopover,\n  selectors: [[\"ion-popover\"]],\n  contentQueries: function IonPopover_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, TemplateRef, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    }\n  },\n  inputs: {\n    alignment: \"alignment\",\n    animated: \"animated\",\n    arrow: \"arrow\",\n    keepContentsMounted: \"keepContentsMounted\",\n    backdropDismiss: \"backdropDismiss\",\n    cssClass: \"cssClass\",\n    dismissOnSelect: \"dismissOnSelect\",\n    enterAnimation: \"enterAnimation\",\n    event: \"event\",\n    isOpen: \"isOpen\",\n    keyboardClose: \"keyboardClose\",\n    leaveAnimation: \"leaveAnimation\",\n    mode: \"mode\",\n    showBackdrop: \"showBackdrop\",\n    translucent: \"translucent\",\n    trigger: \"trigger\",\n    triggerAction: \"triggerAction\",\n    reference: \"reference\",\n    size: \"size\",\n    side: \"side\"\n  }\n});\nIonPopover = __decorate([ProxyCmp({\n  inputs: POPOVER_INPUTS,\n  methods: POPOVER_METHODS\n})\n/**\n * @Component extends from @Directive\n * so by defining the inputs here we\n * do not need to re-define them for the\n * lazy loaded popover.\n */], IonPopover);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IonPopover, [{\n    type: Directive,\n    args: [{\n      selector: 'ion-popover',\n      // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n      inputs: POPOVER_INPUTS\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    template: [{\n      type: ContentChild,\n      args: [TemplateRef, {\n        static: false\n      }]\n    }]\n  });\n})();\nconst MODAL_INPUTS = ['animated', 'keepContentsMounted', 'backdropBreakpoint', 'backdropDismiss', 'breakpoints', 'canDismiss', 'cssClass', 'enterAnimation', 'event', 'handle', 'handleBehavior', 'initialBreakpoint', 'isOpen', 'keyboardClose', 'leaveAnimation', 'mode', 'presentingElement', 'showBackdrop', 'translucent', 'trigger'];\nconst MODAL_METHODS = ['present', 'dismiss', 'onDidDismiss', 'onWillDismiss', 'setCurrentBreakpoint', 'getCurrentBreakpoint'];\nlet IonModal = class IonModal {\n  constructor(c, r, z) {\n    this.z = z;\n    this.isCmpOpen = false;\n    this.el = r.nativeElement;\n    this.el.addEventListener('ionMount', () => {\n      this.isCmpOpen = true;\n      c.detectChanges();\n    });\n    this.el.addEventListener('didDismiss', () => {\n      this.isCmpOpen = false;\n      c.detectChanges();\n    });\n    proxyOutputs(this, this.el, ['ionModalDidPresent', 'ionModalWillPresent', 'ionModalWillDismiss', 'ionModalDidDismiss', 'ionBreakpointDidChange', 'didPresent', 'willPresent', 'willDismiss', 'didDismiss']);\n  }\n};\n/** @nocollapse */\nIonModal.ɵfac = function IonModal_Factory(t) {\n  return new (t || IonModal)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n/** @nocollapse */\nIonModal.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: IonModal,\n  selectors: [[\"ion-modal\"]],\n  contentQueries: function IonModal_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, TemplateRef, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    }\n  },\n  inputs: {\n    animated: \"animated\",\n    keepContentsMounted: \"keepContentsMounted\",\n    backdropBreakpoint: \"backdropBreakpoint\",\n    backdropDismiss: \"backdropDismiss\",\n    breakpoints: \"breakpoints\",\n    canDismiss: \"canDismiss\",\n    cssClass: \"cssClass\",\n    enterAnimation: \"enterAnimation\",\n    event: \"event\",\n    handle: \"handle\",\n    handleBehavior: \"handleBehavior\",\n    initialBreakpoint: \"initialBreakpoint\",\n    isOpen: \"isOpen\",\n    keyboardClose: \"keyboardClose\",\n    leaveAnimation: \"leaveAnimation\",\n    mode: \"mode\",\n    presentingElement: \"presentingElement\",\n    showBackdrop: \"showBackdrop\",\n    translucent: \"translucent\",\n    trigger: \"trigger\"\n  }\n});\nIonModal = __decorate([ProxyCmp({\n  inputs: MODAL_INPUTS,\n  methods: MODAL_METHODS\n})\n/**\n * @Component extends from @Directive\n * so by defining the inputs here we\n * do not need to re-define them for the\n * lazy loaded popover.\n */], IonModal);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IonModal, [{\n    type: Directive,\n    args: [{\n      selector: 'ion-modal',\n      // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n      inputs: MODAL_INPUTS\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    template: [{\n      type: ContentChild,\n      args: [TemplateRef, {\n        static: false\n      }]\n    }]\n  });\n})();\nconst insertView = (views, view, direction) => {\n  if (direction === 'root') {\n    return setRoot(views, view);\n  } else if (direction === 'forward') {\n    return setForward(views, view);\n  } else {\n    return setBack(views, view);\n  }\n};\nconst setRoot = (views, view) => {\n  views = views.filter(v => v.stackId !== view.stackId);\n  views.push(view);\n  return views;\n};\nconst setForward = (views, view) => {\n  const index = views.indexOf(view);\n  if (index >= 0) {\n    views = views.filter(v => v.stackId !== view.stackId || v.id <= view.id);\n  } else {\n    views.push(view);\n  }\n  return views;\n};\nconst setBack = (views, view) => {\n  const index = views.indexOf(view);\n  if (index >= 0) {\n    return views.filter(v => v.stackId !== view.stackId || v.id <= view.id);\n  } else {\n    return setRoot(views, view);\n  }\n};\nconst getUrl = (router, activatedRoute) => {\n  const urlTree = router.createUrlTree(['.'], {\n    relativeTo: activatedRoute\n  });\n  return router.serializeUrl(urlTree);\n};\nconst isTabSwitch = (enteringView, leavingView) => {\n  if (!leavingView) {\n    return true;\n  }\n  return enteringView.stackId !== leavingView.stackId;\n};\nconst computeStackId = (prefixUrl, url) => {\n  if (!prefixUrl) {\n    return undefined;\n  }\n  const segments = toSegments(url);\n  for (let i = 0; i < segments.length; i++) {\n    if (i >= prefixUrl.length) {\n      return segments[i];\n    }\n    if (segments[i] !== prefixUrl[i]) {\n      return undefined;\n    }\n  }\n  return undefined;\n};\nconst toSegments = path => {\n  return path.split('/').map(s => s.trim()).filter(s => s !== '');\n};\nconst destroyView = view => {\n  if (view) {\n    view.ref.destroy();\n    view.unlistenEvents();\n  }\n};\n\n// TODO(FW-2827): types\nclass StackController {\n  constructor(tabsPrefix, containerEl, router, navCtrl, zone, location) {\n    this.containerEl = containerEl;\n    this.router = router;\n    this.navCtrl = navCtrl;\n    this.zone = zone;\n    this.location = location;\n    this.views = [];\n    this.skipTransition = false;\n    this.nextId = 0;\n    this.tabsPrefix = tabsPrefix !== undefined ? toSegments(tabsPrefix) : undefined;\n  }\n  createView(ref, activatedRoute) {\n    var _ref$location;\n    const url = getUrl(this.router, activatedRoute);\n    const element = ref === null || ref === void 0 || (_ref$location = ref.location) === null || _ref$location === void 0 ? void 0 : _ref$location.nativeElement;\n    const unlistenEvents = bindLifecycleEvents(this.zone, ref.instance, element);\n    return {\n      id: this.nextId++,\n      stackId: computeStackId(this.tabsPrefix, url),\n      unlistenEvents,\n      element,\n      ref,\n      url\n    };\n  }\n  getExistingView(activatedRoute) {\n    const activatedUrlKey = getUrl(this.router, activatedRoute);\n    const view = this.views.find(vw => vw.url === activatedUrlKey);\n    if (view) {\n      view.ref.changeDetectorRef.reattach();\n    }\n    return view;\n  }\n  setActive(enteringView) {\n    var _router$navigations, _currentNavigation;\n    const consumeResult = this.navCtrl.consumeTransition();\n    let {\n      direction,\n      animation,\n      animationBuilder\n    } = consumeResult;\n    const leavingView = this.activeView;\n    const tabSwitch = isTabSwitch(enteringView, leavingView);\n    if (tabSwitch) {\n      direction = 'back';\n      animation = undefined;\n    }\n    const viewsSnapshot = this.views.slice();\n    let currentNavigation;\n    const router = this.router;\n    // Angular >= 7.2.0\n    if (router.getCurrentNavigation) {\n      currentNavigation = router.getCurrentNavigation();\n      // Angular < 7.2.0\n    } else if ((_router$navigations = router.navigations) !== null && _router$navigations !== void 0 && _router$navigations.value) {\n      currentNavigation = router.navigations.value;\n    }\n    /**\n     * If the navigation action\n     * sets `replaceUrl: true`\n     * then we need to make sure\n     * we remove the last item\n     * from our views stack\n     */\n    if ((_currentNavigation = currentNavigation) !== null && _currentNavigation !== void 0 && (_currentNavigation = _currentNavigation.extras) !== null && _currentNavigation !== void 0 && _currentNavigation.replaceUrl) {\n      if (this.views.length > 0) {\n        this.views.splice(-1, 1);\n      }\n    }\n    const reused = this.views.includes(enteringView);\n    const views = this.insertView(enteringView, direction);\n    // Trigger change detection before transition starts\n    // This will call ngOnInit() the first time too, just after the view\n    // was attached to the dom, but BEFORE the transition starts\n    if (!reused) {\n      enteringView.ref.changeDetectorRef.detectChanges();\n    }\n    /**\n     * If we are going back from a page that\n     * was presented using a custom animation\n     * we should default to using that\n     * unless the developer explicitly\n     * provided another animation.\n     */\n    const customAnimation = enteringView.animationBuilder;\n    if (animationBuilder === undefined && direction === 'back' && !tabSwitch && customAnimation !== undefined) {\n      animationBuilder = customAnimation;\n    }\n    /**\n     * Save any custom animation so that navigating\n     * back will use this custom animation by default.\n     */\n    if (leavingView) {\n      leavingView.animationBuilder = animationBuilder;\n    }\n    // Wait until previous transitions finish\n    return this.zone.runOutsideAngular(() => {\n      return this.wait(() => {\n        // disconnect leaving page from change detection to\n        // reduce jank during the page transition\n        if (leavingView) {\n          leavingView.ref.changeDetectorRef.detach();\n        }\n        // In case the enteringView is the same as the leavingPage we need to reattach()\n        enteringView.ref.changeDetectorRef.reattach();\n        return this.transition(enteringView, leavingView, animation, this.canGoBack(1), false, animationBuilder).then(() => cleanupAsync(enteringView, views, viewsSnapshot, this.location, this.zone)).then(() => ({\n          enteringView,\n          direction,\n          animation,\n          tabSwitch\n        }));\n      });\n    });\n  }\n  canGoBack(deep, stackId = this.getActiveStackId()) {\n    return this.getStack(stackId).length > deep;\n  }\n  pop(deep, stackId = this.getActiveStackId()) {\n    return this.zone.run(() => {\n      const views = this.getStack(stackId);\n      if (views.length <= deep) {\n        return Promise.resolve(false);\n      }\n      const view = views[views.length - deep - 1];\n      let url = view.url;\n      const viewSavedData = view.savedData;\n      if (viewSavedData) {\n        var _primaryOutlet$route;\n        const primaryOutlet = viewSavedData.get('primary');\n        if (primaryOutlet !== null && primaryOutlet !== void 0 && (_primaryOutlet$route = primaryOutlet.route) !== null && _primaryOutlet$route !== void 0 && (_primaryOutlet$route = _primaryOutlet$route._routerState) !== null && _primaryOutlet$route !== void 0 && _primaryOutlet$route.snapshot.url) {\n          url = primaryOutlet.route._routerState.snapshot.url;\n        }\n      }\n      const {\n        animationBuilder\n      } = this.navCtrl.consumeTransition();\n      return this.navCtrl.navigateBack(url, {\n        ...view.savedExtras,\n        animation: animationBuilder\n      }).then(() => true);\n    });\n  }\n  startBackTransition() {\n    const leavingView = this.activeView;\n    if (leavingView) {\n      const views = this.getStack(leavingView.stackId);\n      const enteringView = views[views.length - 2];\n      const customAnimation = enteringView.animationBuilder;\n      return this.wait(() => {\n        return this.transition(enteringView,\n        // entering view\n        leavingView,\n        // leaving view\n        'back', this.canGoBack(2), true, customAnimation);\n      });\n    }\n    return Promise.resolve();\n  }\n  endBackTransition(shouldComplete) {\n    if (shouldComplete) {\n      this.skipTransition = true;\n      this.pop(1);\n    } else if (this.activeView) {\n      cleanup(this.activeView, this.views, this.views, this.location, this.zone);\n    }\n  }\n  getLastUrl(stackId) {\n    const views = this.getStack(stackId);\n    return views.length > 0 ? views[views.length - 1] : undefined;\n  }\n  /**\n   * @internal\n   */\n  getRootUrl(stackId) {\n    const views = this.getStack(stackId);\n    return views.length > 0 ? views[0] : undefined;\n  }\n  getActiveStackId() {\n    return this.activeView ? this.activeView.stackId : undefined;\n  }\n  /**\n   * @internal\n   */\n  getActiveView() {\n    return this.activeView;\n  }\n  hasRunningTask() {\n    return this.runningTask !== undefined;\n  }\n  destroy() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.containerEl = undefined;\n    this.views.forEach(destroyView);\n    this.activeView = undefined;\n    this.views = [];\n  }\n  getStack(stackId) {\n    return this.views.filter(v => v.stackId === stackId);\n  }\n  insertView(enteringView, direction) {\n    this.activeView = enteringView;\n    this.views = insertView(this.views, enteringView, direction);\n    return this.views.slice();\n  }\n  transition(enteringView, leavingView, direction, showGoBack, progressAnimation, animationBuilder) {\n    if (this.skipTransition) {\n      this.skipTransition = false;\n      return Promise.resolve(false);\n    }\n    if (leavingView === enteringView) {\n      return Promise.resolve(false);\n    }\n    const enteringEl = enteringView ? enteringView.element : undefined;\n    const leavingEl = leavingView ? leavingView.element : undefined;\n    const containerEl = this.containerEl;\n    if (enteringEl && enteringEl !== leavingEl) {\n      enteringEl.classList.add('ion-page');\n      enteringEl.classList.add('ion-page-invisible');\n      if (enteringEl.parentElement !== containerEl) {\n        containerEl.appendChild(enteringEl);\n      }\n      if (containerEl.commit) {\n        return containerEl.commit(enteringEl, leavingEl, {\n          duration: direction === undefined ? 0 : undefined,\n          direction,\n          showGoBack,\n          progressAnimation,\n          animationBuilder\n        });\n      }\n    }\n    return Promise.resolve(false);\n  }\n  wait(task) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (_this2.runningTask !== undefined) {\n        yield _this2.runningTask;\n        _this2.runningTask = undefined;\n      }\n      const promise = _this2.runningTask = task();\n      promise.finally(() => _this2.runningTask = undefined);\n      return promise;\n    })();\n  }\n}\nconst cleanupAsync = (activeRoute, views, viewsSnapshot, location, zone) => {\n  if (typeof requestAnimationFrame === 'function') {\n    return new Promise(resolve => {\n      requestAnimationFrame(() => {\n        cleanup(activeRoute, views, viewsSnapshot, location, zone);\n        resolve();\n      });\n    });\n  }\n  return Promise.resolve();\n};\nconst cleanup = (activeRoute, views, viewsSnapshot, location, zone) => {\n  /**\n   * Re-enter the Angular zone when destroying page components. This will allow\n   * lifecycle events (`ngOnDestroy`) to be run inside the Angular zone.\n   */\n  zone.run(() => viewsSnapshot.filter(view => !views.includes(view)).forEach(destroyView));\n  views.forEach(view => {\n    /**\n     * In the event that a user navigated multiple\n     * times in rapid succession, we want to make sure\n     * we don't pre-emptively detach a view while\n     * it is in mid-transition.\n     *\n     * In this instance we also do not care about query\n     * params or fragments as it will be the same view regardless\n     */\n    const locationWithoutParams = location.path().split('?')[0];\n    const locationWithoutFragment = locationWithoutParams.split('#')[0];\n    if (view !== activeRoute && view.url !== locationWithoutFragment) {\n      const element = view.element;\n      element.setAttribute('aria-hidden', 'true');\n      element.classList.add('ion-page-hidden');\n      view.ref.changeDetectorRef.detach();\n    }\n  });\n};\n\n// TODO(FW-2827): types\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass IonRouterOutlet {\n  constructor(name, tabs, commonLocation, elementRef, router, zone, activatedRoute, parentOutlet) {\n    this.parentOutlet = parentOutlet;\n    this.activatedView = null;\n    // Maintain map of activated route proxies for each component instance\n    this.proxyMap = new WeakMap();\n    // Keep the latest activated route in a subject for the proxy routes to switch map to\n    this.currentActivatedRoute$ = new BehaviorSubject(null);\n    this.activated = null;\n    this._activatedRoute = null;\n    /**\n     * The name of the outlet\n     */\n    this.name = PRIMARY_OUTLET;\n    /** @internal */\n    this.stackWillChange = new EventEmitter();\n    /** @internal */\n    this.stackDidChange = new EventEmitter();\n    // eslint-disable-next-line @angular-eslint/no-output-rename\n    this.activateEvents = new EventEmitter();\n    // eslint-disable-next-line @angular-eslint/no-output-rename\n    this.deactivateEvents = new EventEmitter();\n    this.parentContexts = inject(ChildrenOutletContexts);\n    this.location = inject(ViewContainerRef);\n    this.environmentInjector = inject(EnvironmentInjector);\n    this.inputBinder = inject(INPUT_BINDER, {\n      optional: true\n    });\n    /** @nodoc */\n    this.supportsBindingToComponentInputs = true;\n    // Ionic providers\n    this.config = inject(Config);\n    this.navCtrl = inject(NavController);\n    this.nativeEl = elementRef.nativeElement;\n    this.name = name || PRIMARY_OUTLET;\n    this.tabsPrefix = tabs === 'true' ? getUrl(router, activatedRoute) : undefined;\n    this.stackCtrl = new StackController(this.tabsPrefix, this.nativeEl, router, this.navCtrl, zone, commonLocation);\n    this.parentContexts.onChildOutletCreated(this.name, this);\n  }\n  /** @internal */\n  get activatedComponentRef() {\n    return this.activated;\n  }\n  set animation(animation) {\n    this.nativeEl.animation = animation;\n  }\n  set animated(animated) {\n    this.nativeEl.animated = animated;\n  }\n  set swipeGesture(swipe) {\n    this._swipeGesture = swipe;\n    this.nativeEl.swipeHandler = swipe ? {\n      canStart: () => this.stackCtrl.canGoBack(1) && !this.stackCtrl.hasRunningTask(),\n      onStart: () => this.stackCtrl.startBackTransition(),\n      onEnd: shouldContinue => this.stackCtrl.endBackTransition(shouldContinue)\n    } : undefined;\n  }\n  ngOnDestroy() {\n    var _this$inputBinder;\n    this.stackCtrl.destroy();\n    (_this$inputBinder = this.inputBinder) === null || _this$inputBinder === void 0 || _this$inputBinder.unsubscribeFromRouteData(this);\n  }\n  getContext() {\n    return this.parentContexts.getContext(this.name);\n  }\n  ngOnInit() {\n    this.initializeOutletWithName();\n  }\n  // Note: Ionic deviates from the Angular Router implementation here\n  initializeOutletWithName() {\n    if (!this.activated) {\n      // If the outlet was not instantiated at the time the route got activated we need to populate\n      // the outlet when it is initialized (ie inside a NgIf)\n      const context = this.getContext();\n      if (context !== null && context !== void 0 && context.route) {\n        this.activateWith(context.route, context.injector);\n      }\n    }\n    new Promise(resolve => componentOnReady(this.nativeEl, resolve)).then(() => {\n      if (this._swipeGesture === undefined) {\n        this.swipeGesture = this.config.getBoolean('swipeBackEnabled', this.nativeEl.mode === 'ios');\n      }\n    });\n  }\n  get isActivated() {\n    return !!this.activated;\n  }\n  get component() {\n    if (!this.activated) {\n      throw new Error('Outlet is not activated');\n    }\n    return this.activated.instance;\n  }\n  get activatedRoute() {\n    if (!this.activated) {\n      throw new Error('Outlet is not activated');\n    }\n    return this._activatedRoute;\n  }\n  get activatedRouteData() {\n    if (this._activatedRoute) {\n      return this._activatedRoute.snapshot.data;\n    }\n    return {};\n  }\n  /**\n   * Called when the `RouteReuseStrategy` instructs to detach the subtree\n   */\n  detach() {\n    throw new Error('incompatible reuse strategy');\n  }\n  /**\n   * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  attach(_ref, _activatedRoute) {\n    throw new Error('incompatible reuse strategy');\n  }\n  deactivate() {\n    if (this.activated) {\n      if (this.activatedView) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const context = this.getContext();\n        this.activatedView.savedData = new Map(context.children['contexts']);\n        /**\n         * Angular v11.2.10 introduced a change\n         * where this route context is cleared out when\n         * a router-outlet is deactivated, However,\n         * we need this route information in order to\n         * return a user back to the correct tab when\n         * leaving and then going back to the tab context.\n         */\n        const primaryOutlet = this.activatedView.savedData.get('primary');\n        if (primaryOutlet && context.route) {\n          primaryOutlet.route = {\n            ...context.route\n          };\n        }\n        /**\n         * Ensure we are saving the NavigationExtras\n         * data otherwise it will be lost\n         */\n        this.activatedView.savedExtras = {};\n        if (context.route) {\n          const contextSnapshot = context.route.snapshot;\n          this.activatedView.savedExtras.queryParams = contextSnapshot.queryParams;\n          this.activatedView.savedExtras.fragment = contextSnapshot.fragment;\n        }\n      }\n      const c = this.component;\n      this.activatedView = null;\n      this.activated = null;\n      this._activatedRoute = null;\n      this.deactivateEvents.emit(c);\n    }\n  }\n  activateWith(activatedRoute, environmentInjector) {\n    var _this$inputBinder2;\n    if (this.isActivated) {\n      throw new Error('Cannot activate an already activated outlet');\n    }\n    this._activatedRoute = activatedRoute;\n    let cmpRef;\n    let enteringView = this.stackCtrl.getExistingView(activatedRoute);\n    if (enteringView) {\n      cmpRef = this.activated = enteringView.ref;\n      const saved = enteringView.savedData;\n      if (saved) {\n        // self-restore\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const context = this.getContext();\n        context.children['contexts'] = saved;\n      }\n      // Updated activated route proxy for this component\n      this.updateActivatedRouteProxy(cmpRef.instance, activatedRoute);\n    } else {\n      var _snapshot$routeConfig;\n      const snapshot = activatedRoute._futureSnapshot;\n      /**\n       * Angular 14 introduces a new `loadComponent` property to the route config.\n       * This function will assign a `component` property to the route snapshot.\n       * We check for the presence of this property to determine if the route is\n       * using standalone components.\n       */\n      const childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n      // We create an activated route proxy object that will maintain future updates for this component\n      // over its lifecycle in the stack.\n      const component$ = new BehaviorSubject(null);\n      const activatedRouteProxy = this.createActivatedRouteProxy(component$, activatedRoute);\n      const injector = new OutletInjector(activatedRouteProxy, childContexts, this.location.injector);\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const component = (_snapshot$routeConfig = snapshot.routeConfig.component) !== null && _snapshot$routeConfig !== void 0 ? _snapshot$routeConfig : snapshot.component;\n      cmpRef = this.activated = this.location.createComponent(component, {\n        index: this.location.length,\n        injector,\n        environmentInjector: environmentInjector !== null && environmentInjector !== void 0 ? environmentInjector : this.environmentInjector\n      });\n      // Once the component is created we can push it to our local subject supplied to the proxy\n      component$.next(cmpRef.instance);\n      // Calling `markForCheck` to make sure we will run the change detection when the\n      // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n      enteringView = this.stackCtrl.createView(this.activated, activatedRoute);\n      // Store references to the proxy by component\n      this.proxyMap.set(cmpRef.instance, activatedRouteProxy);\n      this.currentActivatedRoute$.next({\n        component: cmpRef.instance,\n        activatedRoute\n      });\n    }\n    (_this$inputBinder2 = this.inputBinder) === null || _this$inputBinder2 === void 0 || _this$inputBinder2.bindActivatedRouteToOutletComponent(this);\n    this.activatedView = enteringView;\n    /**\n     * The top outlet is set prior to the entering view's transition completing,\n     * so that when we have nested outlets (e.g. ion-tabs inside an ion-router-outlet),\n     * the tabs outlet will be assigned as the top outlet when a view inside tabs is\n     * activated.\n     *\n     * In this scenario, activeWith is called for both the tabs and the root router outlet.\n     * To avoid a race condition, we assign the top outlet synchronously.\n     */\n    this.navCtrl.setTopOutlet(this);\n    const leavingView = this.stackCtrl.getActiveView();\n    this.stackWillChange.emit({\n      enteringView,\n      tabSwitch: isTabSwitch(enteringView, leavingView)\n    });\n    this.stackCtrl.setActive(enteringView).then(data => {\n      this.activateEvents.emit(cmpRef.instance);\n      this.stackDidChange.emit(data);\n    });\n  }\n  /**\n   * Returns `true` if there are pages in the stack to go back.\n   */\n  canGoBack(deep = 1, stackId) {\n    return this.stackCtrl.canGoBack(deep, stackId);\n  }\n  /**\n   * Resolves to `true` if it the outlet was able to sucessfully pop the last N pages.\n   */\n  pop(deep = 1, stackId) {\n    return this.stackCtrl.pop(deep, stackId);\n  }\n  /**\n   * Returns the URL of the active page of each stack.\n   */\n  getLastUrl(stackId) {\n    const active = this.stackCtrl.getLastUrl(stackId);\n    return active ? active.url : undefined;\n  }\n  /**\n   * Returns the RouteView of the active page of each stack.\n   * @internal\n   */\n  getLastRouteView(stackId) {\n    return this.stackCtrl.getLastUrl(stackId);\n  }\n  /**\n   * Returns the root view in the tab stack.\n   * @internal\n   */\n  getRootView(stackId) {\n    return this.stackCtrl.getRootUrl(stackId);\n  }\n  /**\n   * Returns the active stack ID. In the context of ion-tabs, it means the active tab.\n   */\n  getActiveStackId() {\n    return this.stackCtrl.getActiveStackId();\n  }\n  /**\n   * Since the activated route can change over the life time of a component in an ion router outlet, we create\n   * a proxy so that we can update the values over time as a user navigates back to components already in the stack.\n   */\n  createActivatedRouteProxy(component$, activatedRoute) {\n    const proxy = new ActivatedRoute();\n    proxy._futureSnapshot = activatedRoute._futureSnapshot;\n    proxy._routerState = activatedRoute._routerState;\n    proxy.snapshot = activatedRoute.snapshot;\n    proxy.outlet = activatedRoute.outlet;\n    proxy.component = activatedRoute.component;\n    // Setup wrappers for the observables so consumers don't have to worry about switching to new observables as the state updates\n    proxy._paramMap = this.proxyObservable(component$, 'paramMap');\n    proxy._queryParamMap = this.proxyObservable(component$, 'queryParamMap');\n    proxy.url = this.proxyObservable(component$, 'url');\n    proxy.params = this.proxyObservable(component$, 'params');\n    proxy.queryParams = this.proxyObservable(component$, 'queryParams');\n    proxy.fragment = this.proxyObservable(component$, 'fragment');\n    proxy.data = this.proxyObservable(component$, 'data');\n    return proxy;\n  }\n  /**\n   * Create a wrapped observable that will switch to the latest activated route matched by the given component\n   */\n  proxyObservable(component$, path) {\n    return component$.pipe(\n    // First wait until the component instance is pushed\n    filter(component => !!component), switchMap(component => this.currentActivatedRoute$.pipe(filter(current => current !== null && current.component === component), switchMap(current => current && current.activatedRoute[path]), distinctUntilChanged())));\n  }\n  /**\n   * Updates the activated route proxy for the given component to the new incoming router state\n   */\n  updateActivatedRouteProxy(component, activatedRoute) {\n    const proxy = this.proxyMap.get(component);\n    if (!proxy) {\n      throw new Error(`Could not find activated route proxy for view`);\n    }\n    proxy._futureSnapshot = activatedRoute._futureSnapshot;\n    proxy._routerState = activatedRoute._routerState;\n    proxy.snapshot = activatedRoute.snapshot;\n    proxy.outlet = activatedRoute.outlet;\n    proxy.component = activatedRoute.component;\n    this.currentActivatedRoute$.next({\n      component,\n      activatedRoute\n    });\n  }\n}\n/** @nocollapse */\nIonRouterOutlet.ɵfac = function IonRouterOutlet_Factory(t) {\n  return new (t || IonRouterOutlet)(i0.ɵɵinjectAttribute('name'), i0.ɵɵinjectAttribute('tabs'), i0.ɵɵdirectiveInject(i1.Location), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(IonRouterOutlet, 12));\n};\n/** @nocollapse */\nIonRouterOutlet.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: IonRouterOutlet,\n  selectors: [[\"ion-router-outlet\"]],\n  inputs: {\n    animated: \"animated\",\n    animation: \"animation\",\n    mode: \"mode\",\n    swipeGesture: \"swipeGesture\",\n    name: \"name\"\n  },\n  outputs: {\n    stackWillChange: \"stackWillChange\",\n    stackDidChange: \"stackDidChange\",\n    activateEvents: \"activate\",\n    deactivateEvents: \"deactivate\"\n  },\n  exportAs: [\"outlet\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IonRouterOutlet, [{\n    type: Directive,\n    args: [{\n      selector: 'ion-router-outlet',\n      exportAs: 'outlet',\n      // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n      inputs: ['animated', 'animation', 'mode', 'swipeGesture']\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['name']\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Attribute,\n        args: ['tabs']\n      }]\n    }, {\n      type: i1.Location\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i3.Router\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.ActivatedRoute\n    }, {\n      type: IonRouterOutlet,\n      decorators: [{\n        type: SkipSelf\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    name: [{\n      type: Input\n    }],\n    stackWillChange: [{\n      type: Output\n    }],\n    stackDidChange: [{\n      type: Output\n    }],\n    activateEvents: [{\n      type: Output,\n      args: ['activate']\n    }],\n    deactivateEvents: [{\n      type: Output,\n      args: ['deactivate']\n    }]\n  });\n})();\nclass OutletInjector {\n  constructor(route, childContexts, parent) {\n    this.route = route;\n    this.childContexts = childContexts;\n    this.parent = parent;\n  }\n  get(token, notFoundValue) {\n    if (token === ActivatedRoute) {\n      return this.route;\n    }\n    if (token === ChildrenOutletContexts) {\n      return this.childContexts;\n    }\n    return this.parent.get(token, notFoundValue);\n  }\n}\n// TODO: FW-4785 - Remove this once Angular 15 support is dropped\nconst INPUT_BINDER = new InjectionToken('');\n/**\n * Injectable used as a tree-shakable provider for opting in to binding router data to component\n * inputs.\n *\n * The RouterOutlet registers itself with this service when an `ActivatedRoute` is attached or\n * activated. When this happens, the service subscribes to the `ActivatedRoute` observables (params,\n * queryParams, data) and sets the inputs of the component using `ComponentRef.setInput`.\n * Importantly, when an input does not have an item in the route data with a matching key, this\n * input is set to `undefined`. If it were not done this way, the previous information would be\n * retained if the data got removed from the route (i.e. if a query parameter is removed).\n *\n * The `RouterOutlet` should unregister itself when destroyed via `unsubscribeFromRouteData` so that\n * the subscriptions are cleaned up.\n */\nclass RoutedComponentInputBinder {\n  constructor() {\n    this.outletDataSubscriptions = new Map();\n  }\n  bindActivatedRouteToOutletComponent(outlet) {\n    this.unsubscribeFromRouteData(outlet);\n    this.subscribeToRouteData(outlet);\n  }\n  unsubscribeFromRouteData(outlet) {\n    var _this$outletDataSubsc;\n    (_this$outletDataSubsc = this.outletDataSubscriptions.get(outlet)) === null || _this$outletDataSubsc === void 0 || _this$outletDataSubsc.unsubscribe();\n    this.outletDataSubscriptions.delete(outlet);\n  }\n  subscribeToRouteData(outlet) {\n    const {\n      activatedRoute\n    } = outlet;\n    const dataSubscription = combineLatest([activatedRoute.queryParams, activatedRoute.params, activatedRoute.data]).pipe(switchMap(([queryParams, params, data], index) => {\n      data = {\n        ...queryParams,\n        ...params,\n        ...data\n      };\n      // Get the first result from the data subscription synchronously so it's available to\n      // the component as soon as possible (and doesn't require a second change detection).\n      if (index === 0) {\n        return of(data);\n      }\n      // Promise.resolve is used to avoid synchronously writing the wrong data when\n      // two of the Observables in the `combineLatest` stream emit one after\n      // another.\n      return Promise.resolve(data);\n    })).subscribe(data => {\n      // Outlet may have been deactivated or changed names to be associated with a different\n      // route\n      if (!outlet.isActivated || !outlet.activatedComponentRef || outlet.activatedRoute !== activatedRoute || activatedRoute.component === null) {\n        this.unsubscribeFromRouteData(outlet);\n        return;\n      }\n      const mirror = reflectComponentType(activatedRoute.component);\n      if (!mirror) {\n        this.unsubscribeFromRouteData(outlet);\n        return;\n      }\n      for (const {\n        templateName\n      } of mirror.inputs) {\n        outlet.activatedComponentRef.setInput(templateName, data[templateName]);\n      }\n    });\n    this.outletDataSubscriptions.set(outlet, dataSubscription);\n  }\n}\n/** @nocollapse */\nRoutedComponentInputBinder.ɵfac = function RoutedComponentInputBinder_Factory(t) {\n  return new (t || RoutedComponentInputBinder)();\n};\n/** @nocollapse */\nRoutedComponentInputBinder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RoutedComponentInputBinder,\n  factory: RoutedComponentInputBinder.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RoutedComponentInputBinder, [{\n    type: Injectable\n  }], null, null);\n})();\nconst provideComponentInputBinding = () => {\n  return {\n    provide: INPUT_BINDER,\n    useFactory: componentInputBindingFactory,\n    deps: [Router]\n  };\n};\nfunction componentInputBindingFactory(router) {\n  /**\n   * We cast the router to any here, since the componentInputBindingEnabled\n   * property is not available until Angular v16.\n   */\n  if (router !== null && router !== void 0 && router.componentInputBindingEnabled) {\n    return new RoutedComponentInputBinder();\n  }\n  return null;\n}\nconst BACK_BUTTON_INPUTS = ['color', 'defaultHref', 'disabled', 'icon', 'mode', 'routerAnimation', 'text', 'type'];\nlet IonBackButton = class IonBackButton {\n  constructor(routerOutlet, navCtrl, config, r, z, c) {\n    this.routerOutlet = routerOutlet;\n    this.navCtrl = navCtrl;\n    this.config = config;\n    this.r = r;\n    this.z = z;\n    c.detach();\n    this.el = this.r.nativeElement;\n  }\n  /**\n   * @internal\n   */\n  onClick(ev) {\n    var _this$routerOutlet;\n    const defaultHref = this.defaultHref || this.config.get('backButtonDefaultHref');\n    if ((_this$routerOutlet = this.routerOutlet) !== null && _this$routerOutlet !== void 0 && _this$routerOutlet.canGoBack()) {\n      this.navCtrl.setDirection('back', undefined, undefined, this.routerAnimation);\n      this.routerOutlet.pop();\n      ev.preventDefault();\n    } else if (defaultHref != null) {\n      this.navCtrl.navigateBack(defaultHref, {\n        animation: this.routerAnimation\n      });\n      ev.preventDefault();\n    }\n  }\n};\n/** @nocollapse */\nIonBackButton.ɵfac = function IonBackButton_Factory(t) {\n  return new (t || IonBackButton)(i0.ɵɵdirectiveInject(IonRouterOutlet, 8), i0.ɵɵdirectiveInject(NavController), i0.ɵɵdirectiveInject(Config), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n/** @nocollapse */\nIonBackButton.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: IonBackButton,\n  hostBindings: function IonBackButton_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function IonBackButton_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  },\n  inputs: {\n    color: \"color\",\n    defaultHref: \"defaultHref\",\n    disabled: \"disabled\",\n    icon: \"icon\",\n    mode: \"mode\",\n    routerAnimation: \"routerAnimation\",\n    text: \"text\",\n    type: \"type\"\n  }\n});\nIonBackButton = __decorate([ProxyCmp({\n  inputs: BACK_BUTTON_INPUTS\n})], IonBackButton);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IonBackButton, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n      inputs: BACK_BUTTON_INPUTS\n    }]\n  }], function () {\n    return [{\n      type: IonRouterOutlet,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: NavController\n    }, {\n      type: Config\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    defaultHref: [{\n      type: Input\n    }],\n    routerAnimation: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n\n/**\n * Adds support for Ionic routing directions and animations to the base Angular router link directive.\n *\n * When the router link is clicked, the directive will assign the direction and\n * animation so that the routing integration will transition correctly.\n */\nclass RouterLinkDelegateDirective {\n  constructor(locationStrategy, navCtrl, elementRef, router, routerLink) {\n    this.locationStrategy = locationStrategy;\n    this.navCtrl = navCtrl;\n    this.elementRef = elementRef;\n    this.router = router;\n    this.routerLink = routerLink;\n    this.routerDirection = 'forward';\n  }\n  ngOnInit() {\n    this.updateTargetUrlAndHref();\n  }\n  ngOnChanges() {\n    this.updateTargetUrlAndHref();\n  }\n  updateTargetUrlAndHref() {\n    var _this$routerLink;\n    if ((_this$routerLink = this.routerLink) !== null && _this$routerLink !== void 0 && _this$routerLink.urlTree) {\n      const href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.routerLink.urlTree));\n      this.elementRef.nativeElement.href = href;\n    }\n  }\n  /**\n   * @internal\n   */\n  onClick(ev) {\n    this.navCtrl.setDirection(this.routerDirection, undefined, undefined, this.routerAnimation);\n    /**\n     * This prevents the browser from\n     * performing a page reload when pressing\n     * an Ionic component with routerLink.\n     * The page reload interferes with routing\n     * and causes ion-back-button to disappear\n     * since the local history is wiped on reload.\n     */\n    ev.preventDefault();\n  }\n}\n/** @nocollapse */\nRouterLinkDelegateDirective.ɵfac = function RouterLinkDelegateDirective_Factory(t) {\n  return new (t || RouterLinkDelegateDirective)(i0.ɵɵdirectiveInject(i1.LocationStrategy), i0.ɵɵdirectiveInject(NavController), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.RouterLink, 8));\n};\n/** @nocollapse */\nRouterLinkDelegateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: RouterLinkDelegateDirective,\n  selectors: [[\"\", \"routerLink\", \"\", 5, \"a\", 5, \"area\"]],\n  hostBindings: function RouterLinkDelegateDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function RouterLinkDelegateDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  },\n  inputs: {\n    routerDirection: \"routerDirection\",\n    routerAnimation: \"routerAnimation\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RouterLinkDelegateDirective, [{\n    type: Directive,\n    args: [{\n      selector: ':not(a):not(area)[routerLink]'\n    }]\n  }], function () {\n    return [{\n      type: i1.LocationStrategy\n    }, {\n      type: NavController\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i3.Router\n    }, {\n      type: i3.RouterLink,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    routerDirection: [{\n      type: Input\n    }],\n    routerAnimation: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\nclass RouterLinkWithHrefDelegateDirective {\n  constructor(locationStrategy, navCtrl, elementRef, router, routerLink) {\n    this.locationStrategy = locationStrategy;\n    this.navCtrl = navCtrl;\n    this.elementRef = elementRef;\n    this.router = router;\n    this.routerLink = routerLink;\n    this.routerDirection = 'forward';\n  }\n  ngOnInit() {\n    this.updateTargetUrlAndHref();\n  }\n  ngOnChanges() {\n    this.updateTargetUrlAndHref();\n  }\n  updateTargetUrlAndHref() {\n    var _this$routerLink2;\n    if ((_this$routerLink2 = this.routerLink) !== null && _this$routerLink2 !== void 0 && _this$routerLink2.urlTree) {\n      const href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.routerLink.urlTree));\n      this.elementRef.nativeElement.href = href;\n    }\n  }\n  /**\n   * @internal\n   */\n  onClick() {\n    this.navCtrl.setDirection(this.routerDirection, undefined, undefined, this.routerAnimation);\n  }\n}\n/** @nocollapse */\nRouterLinkWithHrefDelegateDirective.ɵfac = function RouterLinkWithHrefDelegateDirective_Factory(t) {\n  return new (t || RouterLinkWithHrefDelegateDirective)(i0.ɵɵdirectiveInject(i1.LocationStrategy), i0.ɵɵdirectiveInject(NavController), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.RouterLink, 8));\n};\n/** @nocollapse */\nRouterLinkWithHrefDelegateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: RouterLinkWithHrefDelegateDirective,\n  selectors: [[\"a\", \"routerLink\", \"\"], [\"area\", \"routerLink\", \"\"]],\n  hostBindings: function RouterLinkWithHrefDelegateDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function RouterLinkWithHrefDelegateDirective_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n  },\n  inputs: {\n    routerDirection: \"routerDirection\",\n    routerAnimation: \"routerAnimation\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RouterLinkWithHrefDelegateDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'a[routerLink],area[routerLink]'\n    }]\n  }], function () {\n    return [{\n      type: i1.LocationStrategy\n    }, {\n      type: NavController\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i3.Router\n    }, {\n      type: i3.RouterLink,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    routerDirection: [{\n      type: Input\n    }],\n    routerAnimation: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\nconst NAV_INPUTS = ['animated', 'animation', 'root', 'rootParams', 'swipeGesture'];\nconst NAV_METHODS = ['push', 'insert', 'insertPages', 'pop', 'popTo', 'popToRoot', 'removeIndex', 'setRoot', 'setPages', 'getActive', 'getByIndex', 'canGoBack', 'getPrevious'];\nlet IonNav = class IonNav {\n  constructor(ref, environmentInjector, injector, angularDelegate, z, c) {\n    this.z = z;\n    c.detach();\n    this.el = ref.nativeElement;\n    ref.nativeElement.delegate = angularDelegate.create(environmentInjector, injector);\n    proxyOutputs(this, this.el, ['ionNavDidChange', 'ionNavWillChange']);\n  }\n};\n/** @nocollapse */\nIonNav.ɵfac = function IonNav_Factory(t) {\n  return new (t || IonNav)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.EnvironmentInjector), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(AngularDelegate), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n/** @nocollapse */\nIonNav.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: IonNav,\n  inputs: {\n    animated: \"animated\",\n    animation: \"animation\",\n    root: \"root\",\n    rootParams: \"rootParams\",\n    swipeGesture: \"swipeGesture\"\n  }\n});\nIonNav = __decorate([ProxyCmp({\n  inputs: NAV_INPUTS,\n  methods: NAV_METHODS\n})], IonNav);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IonNav, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n      inputs: NAV_INPUTS\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.EnvironmentInjector\n    }, {\n      type: i0.Injector\n    }, {\n      type: AngularDelegate\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass IonTabs {\n  constructor(navCtrl) {\n    this.navCtrl = navCtrl;\n    /**\n     * Emitted before the tab view is changed.\n     */\n    this.ionTabsWillChange = new EventEmitter();\n    /**\n     * Emitted after the tab view is changed.\n     */\n    this.ionTabsDidChange = new EventEmitter();\n    this.tabBarSlot = 'bottom';\n  }\n  ngAfterContentInit() {\n    this.detectSlotChanges();\n  }\n  ngAfterContentChecked() {\n    this.detectSlotChanges();\n  }\n  /**\n   * @internal\n   */\n  onStackWillChange({\n    enteringView,\n    tabSwitch\n  }) {\n    const stackId = enteringView.stackId;\n    if (tabSwitch && stackId !== undefined) {\n      this.ionTabsWillChange.emit({\n        tab: stackId\n      });\n    }\n  }\n  /**\n   * @internal\n   */\n  onStackDidChange({\n    enteringView,\n    tabSwitch\n  }) {\n    const stackId = enteringView.stackId;\n    if (tabSwitch && stackId !== undefined) {\n      if (this.tabBar) {\n        this.tabBar.selectedTab = stackId;\n      }\n      this.ionTabsDidChange.emit({\n        tab: stackId\n      });\n    }\n  }\n  /**\n   * When a tab button is clicked, there are several scenarios:\n   * 1. If the selected tab is currently active (the tab button has been clicked\n   *    again), then it should go to the root view for that tab.\n   *\n   *   a. Get the saved root view from the router outlet. If the saved root view\n   *      matches the tabRootUrl, set the route view to this view including the\n   *      navigation extras.\n   *   b. If the saved root view from the router outlet does\n   *      not match, navigate to the tabRootUrl. No navigation extras are\n   *      included.\n   *\n   * 2. If the current tab tab is not currently selected, get the last route\n   *    view from the router outlet.\n   *\n   *   a. If the last route view exists, navigate to that view including any\n   *      navigation extras\n   *   b. If the last route view doesn't exist, then navigate\n   *      to the default tabRootUrl\n   */\n  select(tabOrEvent) {\n    const isTabString = typeof tabOrEvent === 'string';\n    const tab = isTabString ? tabOrEvent : tabOrEvent.detail.tab;\n    const alreadySelected = this.outlet.getActiveStackId() === tab;\n    const tabRootUrl = `${this.outlet.tabsPrefix}/${tab}`;\n    /**\n     * If this is a nested tab, prevent the event\n     * from bubbling otherwise the outer tabs\n     * will respond to this event too, causing\n     * the app to get directed to the wrong place.\n     */\n    if (!isTabString) {\n      tabOrEvent.stopPropagation();\n    }\n    if (alreadySelected) {\n      const activeStackId = this.outlet.getActiveStackId();\n      const activeView = this.outlet.getLastRouteView(activeStackId);\n      // If on root tab, do not navigate to root tab again\n      if ((activeView === null || activeView === void 0 ? void 0 : activeView.url) === tabRootUrl) {\n        return;\n      }\n      const rootView = this.outlet.getRootView(tab);\n      const navigationExtras = rootView && tabRootUrl === rootView.url && rootView.savedExtras;\n      return this.navCtrl.navigateRoot(tabRootUrl, {\n        ...navigationExtras,\n        animated: true,\n        animationDirection: 'back'\n      });\n    } else {\n      const lastRoute = this.outlet.getLastRouteView(tab);\n      /**\n       * If there is a lastRoute, goto that, otherwise goto the fallback url of the\n       * selected tab\n       */\n      const url = (lastRoute === null || lastRoute === void 0 ? void 0 : lastRoute.url) || tabRootUrl;\n      const navigationExtras = lastRoute === null || lastRoute === void 0 ? void 0 : lastRoute.savedExtras;\n      return this.navCtrl.navigateRoot(url, {\n        ...navigationExtras,\n        animated: true,\n        animationDirection: 'back'\n      });\n    }\n  }\n  getSelected() {\n    return this.outlet.getActiveStackId();\n  }\n  /**\n   * Detects changes to the slot attribute of the tab bar.\n   *\n   * If the slot attribute has changed, then the tab bar\n   * should be relocated to the new slot position.\n   */\n  detectSlotChanges() {\n    this.tabBars.forEach(tabBar => {\n      // el is a protected attribute from the generated component wrapper\n      const currentSlot = tabBar.el.getAttribute('slot');\n      if (currentSlot !== this.tabBarSlot) {\n        this.tabBarSlot = currentSlot;\n        this.relocateTabBar();\n      }\n    });\n  }\n  /**\n   * Relocates the tab bar to the new slot position.\n   */\n  relocateTabBar() {\n    /**\n     * `el` is a protected attribute from the generated component wrapper.\n     * To avoid having to manually create the wrapper for tab bar, we\n     * cast the tab bar to any and access the protected attribute.\n     */\n    const tabBar = this.tabBar.el;\n    if (this.tabBarSlot === 'top') {\n      /**\n       * A tab bar with a slot of \"top\" should be inserted\n       * at the top of the container.\n       */\n      this.tabsInner.nativeElement.before(tabBar);\n    } else {\n      /**\n       * A tab bar with a slot of \"bottom\" or without a slot\n       * should be inserted at the end of the container.\n       */\n      this.tabsInner.nativeElement.after(tabBar);\n    }\n  }\n}\n/** @nocollapse */\nIonTabs.ɵfac = function IonTabs_Factory(t) {\n  return new (t || IonTabs)(i0.ɵɵdirectiveInject(NavController));\n};\n/** @nocollapse */\nIonTabs.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: IonTabs,\n  selectors: [[\"ion-tabs\"]],\n  viewQuery: function IonTabs_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7, ElementRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tabsInner = _t.first);\n    }\n  },\n  hostBindings: function IonTabs_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"ionTabButtonClick\", function IonTabs_ionTabButtonClick_HostBindingHandler($event) {\n        return ctx.select($event);\n      });\n    }\n  },\n  outputs: {\n    ionTabsWillChange: \"ionTabsWillChange\",\n    ionTabsDidChange: \"ionTabsDidChange\"\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IonTabs, [{\n    type: Directive,\n    args: [{\n      selector: 'ion-tabs'\n    }]\n  }], function () {\n    return [{\n      type: NavController\n    }];\n  }, {\n    tabsInner: [{\n      type: ViewChild,\n      args: ['tabsInner', {\n        read: ElementRef,\n        static: true\n      }]\n    }],\n    ionTabsWillChange: [{\n      type: Output\n    }],\n    ionTabsDidChange: [{\n      type: Output\n    }],\n    select: [{\n      type: HostListener,\n      args: ['ionTabButtonClick', ['$event']]\n    }]\n  });\n})();\nconst raf = h => {\n  if (typeof __zone_symbol__requestAnimationFrame === 'function') {\n    return __zone_symbol__requestAnimationFrame(h);\n  }\n  if (typeof requestAnimationFrame === 'function') {\n    return requestAnimationFrame(h);\n  }\n  return setTimeout(h);\n};\n\n// TODO(FW-2827): types\nclass ValueAccessor {\n  constructor(injector, elementRef) {\n    this.injector = injector;\n    this.elementRef = elementRef;\n    this.onChange = () => {\n      /**/\n    };\n    this.onTouched = () => {\n      /**/\n    };\n  }\n  writeValue(value) {\n    this.elementRef.nativeElement.value = this.lastValue = value;\n    setIonicClasses(this.elementRef);\n  }\n  /**\n   * Notifies the ControlValueAccessor of a change in the value of the control.\n   *\n   * This is called by each of the ValueAccessor directives when we want to update\n   * the status and validity of the form control. For example with text components this\n   * is called when the ionInput event is fired. For select components this is called\n   * when the ionChange event is fired.\n   *\n   * This also updates the Ionic form status classes on the element.\n   *\n   * @param el The component element.\n   * @param value The new value of the control.\n   */\n  handleValueChange(el, value) {\n    if (el === this.elementRef.nativeElement) {\n      if (value !== this.lastValue) {\n        this.lastValue = value;\n        this.onChange(value);\n      }\n      setIonicClasses(this.elementRef);\n    }\n  }\n  _handleBlurEvent(el) {\n    if (el === this.elementRef.nativeElement) {\n      this.onTouched();\n      setIonicClasses(this.elementRef);\n    }\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  setDisabledState(isDisabled) {\n    this.elementRef.nativeElement.disabled = isDisabled;\n  }\n  ngOnDestroy() {\n    if (this.statusChanges) {\n      this.statusChanges.unsubscribe();\n    }\n  }\n  ngAfterViewInit() {\n    let ngControl;\n    try {\n      ngControl = this.injector.get(NgControl);\n    } catch {\n      /* No FormControl or ngModel binding */\n    }\n    if (!ngControl) {\n      return;\n    }\n    // Listen for changes in validity, disabled, or pending states\n    if (ngControl.statusChanges) {\n      this.statusChanges = ngControl.statusChanges.subscribe(() => setIonicClasses(this.elementRef));\n    }\n    /**\n     * TODO FW-2787: Remove this in favor of https://github.com/angular/angular/issues/10887\n     * whenever it is implemented.\n     */\n    const formControl = ngControl.control;\n    if (formControl) {\n      const methodsToPatch = ['markAsTouched', 'markAllAsTouched', 'markAsUntouched', 'markAsDirty', 'markAsPristine'];\n      methodsToPatch.forEach(method => {\n        if (typeof formControl[method] !== 'undefined') {\n          const oldFn = formControl[method].bind(formControl);\n          formControl[method] = (...params) => {\n            oldFn(...params);\n            setIonicClasses(this.elementRef);\n          };\n        }\n      });\n    }\n  }\n}\n/** @nocollapse */\nValueAccessor.ɵfac = function ValueAccessor_Factory(t) {\n  return new (t || ValueAccessor)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n/** @nocollapse */\nValueAccessor.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ValueAccessor,\n  hostBindings: function ValueAccessor_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"ionBlur\", function ValueAccessor_ionBlur_HostBindingHandler($event) {\n        return ctx._handleBlurEvent($event.target);\n      });\n    }\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ValueAccessor, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    _handleBlurEvent: [{\n      type: HostListener,\n      args: ['ionBlur', ['$event.target']]\n    }]\n  });\n})();\nconst setIonicClasses = element => {\n  raf(() => {\n    const input = element.nativeElement;\n    const hasValue = input.value != null && input.value.toString().length > 0;\n    const classes = getClasses(input);\n    setClasses(input, classes);\n    const item = input.closest('ion-item');\n    if (item) {\n      if (hasValue) {\n        setClasses(item, [...classes, 'item-has-value']);\n      } else {\n        setClasses(item, classes);\n      }\n    }\n  });\n};\nconst getClasses = element => {\n  const classList = element.classList;\n  const classes = [];\n  for (let i = 0; i < classList.length; i++) {\n    const item = classList.item(i);\n    if (item !== null && startsWith(item, 'ng-')) {\n      classes.push(`ion-${item.substring(3)}`);\n    }\n  }\n  return classes;\n};\nconst setClasses = (element, classes) => {\n  const classList = element.classList;\n  classList.remove('ion-valid', 'ion-invalid', 'ion-touched', 'ion-untouched', 'ion-dirty', 'ion-pristine');\n  classList.add(...classes);\n};\nconst startsWith = (input, search) => {\n  return input.substring(0, search.length) === search;\n};\n\n/**\n * Provides a way to customize when activated routes get reused.\n */\nclass IonicRouteStrategy {\n  /**\n   * Whether the given route should detach for later reuse.\n   */\n  shouldDetach(_route) {\n    return false;\n  }\n  /**\n   * Returns `false`, meaning the route (and its subtree) is never reattached\n   */\n  shouldAttach(_route) {\n    return false;\n  }\n  /**\n   * A no-op; the route is never stored since this strategy never detaches routes for later re-use.\n   */\n  store(_route, _detachedTree) {\n    return;\n  }\n  /**\n   * Returns `null` because this strategy does not store routes for later re-use.\n   */\n  retrieve(_route) {\n    return null;\n  }\n  /**\n   * Determines if a route should be reused.\n   * This strategy returns `true` when the future route config and\n   * current route config are identical and all route parameters are identical.\n   */\n  shouldReuseRoute(future, curr) {\n    if (future.routeConfig !== curr.routeConfig) {\n      return false;\n    }\n    // checking router params\n    const futureParams = future.params;\n    const currentParams = curr.params;\n    const keysA = Object.keys(futureParams);\n    const keysB = Object.keys(currentParams);\n    if (keysA.length !== keysB.length) {\n      return false;\n    }\n    // Test for A's keys different from B.\n    for (const key of keysA) {\n      if (currentParams[key] !== futureParams[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n// TODO(FW-2827): types\nclass OverlayBaseController {\n  constructor(ctrl) {\n    this.ctrl = ctrl;\n  }\n  /**\n   * Creates a new overlay\n   */\n  create(opts) {\n    return this.ctrl.create(opts || {});\n  }\n  /**\n   * When `id` is not provided, it dismisses the top overlay.\n   */\n  dismiss(data, role, id) {\n    return this.ctrl.dismiss(data, role, id);\n  }\n  /**\n   * Returns the top overlay.\n   */\n  getTop() {\n    return this.ctrl.getTop();\n  }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularDelegate, Config, ConfigToken, DomController, IonBackButton, IonModal, IonNav, IonPopover, IonRouterOutlet, IonTabs, IonicRouteStrategy, MenuController, NavController, NavParams, OverlayBaseController, Platform, ProxyCmp, RouterLinkDelegateDirective, RouterLinkWithHrefDelegateDirective, ValueAccessor, bindLifecycleEvents, provideComponentInputBinding, raf, setIonicClasses };","map":{"version":3,"names":["i0","Injectable","Inject","Optional","InjectionToken","inject","NgZone","ApplicationRef","Injector","createComponent","TemplateRef","Directive","ContentChild","EventEmitter","ViewContainerRef","EnvironmentInjector","Attribute","SkipSelf","Input","Output","reflectComponentType","HostListener","ElementRef","ViewChild","i3","NavigationStart","PRIMARY_OUTLET","ChildrenOutletContexts","ActivatedRoute","Router","i1","DOCUMENT","isPlatform","getPlatforms","LIFECYCLE_WILL_ENTER","LIFECYCLE_DID_ENTER","LIFECYCLE_WILL_LEAVE","LIFECYCLE_DID_LEAVE","LIFECYCLE_WILL_UNLOAD","componentOnReady","Subject","fromEvent","BehaviorSubject","combineLatest","of","__decorate","filter","switchMap","distinctUntilChanged","NgControl","_c0","MenuController","constructor","menuController","open","menuId","close","toggle","enable","shouldEnable","swipeGesture","isOpen","isEnabled","get","getOpen","getMenus","DomController","read","cb","getQueue","write","ɵfac","DomController_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","win","window","Ionic","queue","requestAnimationFrame","Platform","doc","zone","backButton","keyboardDidShow","keyboardDidHide","pause","resume","resize","run","_this$win","defaultView","subscribeWithPriority","priority","callback","subscribe","ev","register","processNextHandler","proxyEvent","readyResolve","_readyPromise","Promise","res","addEventListener","once","is","platformName","platforms","ready","isRTL","dir","getQueryParam","key","readQueryParam","location","href","isLandscape","isPortrait","_this$win$matchMedia","_this$win2","matchMedia","call","matches","testUserAgent","expression","nav","navigator","userAgent","indexOf","url","width","innerWidth","height","innerHeight","Platform_Factory","ɵɵinject","undefined","decorators","replace","regex","RegExp","results","exec","decodeURIComponent","emitter","el","eventName","value","detail","next","NavController","platform","serializer","router","direction","DEFAULT_DIRECTION","animated","DEFAULT_ANIMATED","guessDirection","lastNavId","events","id","restoredState","navigationId","guessAnimation","pop","navigateForward","options","setDirection","animationDirection","animation","navigate","navigateBack","navigateRoot","back","_this","_asyncToGenerator","outlet","topOutlet","parentOutlet","animationBuilder","getAnimation","setTopOutlet","consumeTransition","Array","isArray","urlTree","parse","toString","queryParams","fragment","navigateByUrl","NavController_Factory","Location","UrlSerializer","Config","fallback","c","getConfig","getBoolean","getNumber","Config_Factory","ConfigToken","config","NavParams","data","param","AngularDelegate","applicationRef","create","environmentInjector","injector","elementReferenceKey","AngularFrameworkDelegate","AngularDelegate_Factory","elRefMap","WeakMap","elEventsMap","attachViewToDom","container","component","params","cssClasses","resolve","componentProps","attachView","removeViewFromDom","_container","componentRef","destroy","delete","unbindEvents","childInjector","providers","getProviders","parent","elementInjector","instance","hostElement","nativeElement","console","error","tagName","toLowerCase","name","Object","assign","cssClass","classList","add","bindLifecycleEvents","appendChild","hostView","set","LIFECYCLES","element","unregisters","map","handler","removeEventListener","forEach","fn","NavParamsToken","provide","useValue","useFactory","provideNavParamsInjectable","deps","proxyInputs","Cmp","inputs","Prototype","prototype","item","defineProperty","val","z","runOutsideAngular","proxyMethods","methods","methodName","arguments","apply","proxyOutputs","ProxyCmp","opts","decorator","cls","defineCustomElementFn","POPOVER_INPUTS","POPOVER_METHODS","IonPopover","r","isCmpOpen","detectChanges","IonPopover_Factory","ɵɵdirectiveInject","ChangeDetectorRef","ɵdir","ɵɵdefineDirective","selectors","contentQueries","IonPopover_ContentQueries","rf","ctx","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","template","first","alignment","arrow","keepContentsMounted","backdropDismiss","dismissOnSelect","enterAnimation","event","keyboardClose","leaveAnimation","mode","showBackdrop","translucent","trigger","triggerAction","reference","size","side","selector","static","MODAL_INPUTS","MODAL_METHODS","IonModal","IonModal_Factory","IonModal_ContentQueries","backdropBreakpoint","breakpoints","canDismiss","handle","handleBehavior","initialBreakpoint","presentingElement","insertView","views","view","setRoot","setForward","setBack","v","stackId","push","index","getUrl","activatedRoute","createUrlTree","relativeTo","serializeUrl","isTabSwitch","enteringView","leavingView","computeStackId","prefixUrl","segments","toSegments","i","length","path","split","s","trim","destroyView","ref","unlistenEvents","StackController","tabsPrefix","containerEl","navCtrl","skipTransition","nextId","createView","_ref$location","getExistingView","activatedUrlKey","find","vw","changeDetectorRef","reattach","setActive","_router$navigations","_currentNavigation","consumeResult","activeView","tabSwitch","viewsSnapshot","slice","currentNavigation","getCurrentNavigation","navigations","extras","replaceUrl","splice","reused","includes","customAnimation","wait","detach","transition","canGoBack","then","cleanupAsync","deep","getActiveStackId","getStack","viewSavedData","savedData","_primaryOutlet$route","primaryOutlet","route","_routerState","snapshot","savedExtras","startBackTransition","endBackTransition","shouldComplete","cleanup","getLastUrl","getRootUrl","getActiveView","hasRunningTask","runningTask","showGoBack","progressAnimation","enteringEl","leavingEl","parentElement","commit","duration","task","_this2","promise","finally","activeRoute","locationWithoutParams","locationWithoutFragment","setAttribute","IonRouterOutlet","tabs","commonLocation","elementRef","activatedView","proxyMap","currentActivatedRoute$","activated","_activatedRoute","stackWillChange","stackDidChange","activateEvents","deactivateEvents","parentContexts","inputBinder","INPUT_BINDER","optional","supportsBindingToComponentInputs","nativeEl","stackCtrl","onChildOutletCreated","activatedComponentRef","swipe","_swipeGesture","swipeHandler","canStart","onStart","onEnd","shouldContinue","ngOnDestroy","_this$inputBinder","unsubscribeFromRouteData","getContext","ngOnInit","initializeOutletWithName","context","activateWith","isActivated","Error","activatedRouteData","attach","_ref","deactivate","Map","children","contextSnapshot","emit","_this$inputBinder2","cmpRef","saved","updateActivatedRouteProxy","_snapshot$routeConfig","_futureSnapshot","childContexts","getOrCreateContext","component$","activatedRouteProxy","createActivatedRouteProxy","OutletInjector","routeConfig","bindActivatedRouteToOutletComponent","active","getLastRouteView","getRootView","proxy","_paramMap","proxyObservable","_queryParamMap","pipe","current","IonRouterOutlet_Factory","ɵɵinjectAttribute","outputs","exportAs","notFoundValue","RoutedComponentInputBinder","outletDataSubscriptions","subscribeToRouteData","_this$outletDataSubsc","unsubscribe","dataSubscription","mirror","templateName","setInput","RoutedComponentInputBinder_Factory","provideComponentInputBinding","componentInputBindingFactory","componentInputBindingEnabled","BACK_BUTTON_INPUTS","IonBackButton","routerOutlet","onClick","_this$routerOutlet","defaultHref","routerAnimation","preventDefault","IonBackButton_Factory","hostBindings","IonBackButton_HostBindings","ɵɵlistener","IonBackButton_click_HostBindingHandler","$event","color","disabled","icon","text","RouterLinkDelegateDirective","locationStrategy","routerLink","routerDirection","updateTargetUrlAndHref","ngOnChanges","_this$routerLink","prepareExternalUrl","RouterLinkDelegateDirective_Factory","LocationStrategy","RouterLink","RouterLinkDelegateDirective_HostBindings","RouterLinkDelegateDirective_click_HostBindingHandler","features","ɵɵNgOnChangesFeature","RouterLinkWithHrefDelegateDirective","_this$routerLink2","RouterLinkWithHrefDelegateDirective_Factory","RouterLinkWithHrefDelegateDirective_HostBindings","RouterLinkWithHrefDelegateDirective_click_HostBindingHandler","NAV_INPUTS","NAV_METHODS","IonNav","angularDelegate","delegate","IonNav_Factory","root","rootParams","IonTabs","ionTabsWillChange","ionTabsDidChange","tabBarSlot","ngAfterContentInit","detectSlotChanges","ngAfterContentChecked","onStackWillChange","tab","onStackDidChange","tabBar","selectedTab","select","tabOrEvent","isTabString","alreadySelected","tabRootUrl","stopPropagation","activeStackId","rootView","navigationExtras","lastRoute","getSelected","tabBars","currentSlot","getAttribute","relocateTabBar","tabsInner","before","after","IonTabs_Factory","viewQuery","IonTabs_Query","ɵɵviewQuery","IonTabs_HostBindings","IonTabs_ionTabButtonClick_HostBindingHandler","raf","h","__zone_symbol__requestAnimationFrame","setTimeout","ValueAccessor","onChange","onTouched","writeValue","lastValue","setIonicClasses","handleValueChange","_handleBlurEvent","registerOnChange","registerOnTouched","setDisabledState","isDisabled","statusChanges","ngAfterViewInit","ngControl","formControl","control","methodsToPatch","method","oldFn","bind","ValueAccessor_Factory","ValueAccessor_HostBindings","ValueAccessor_ionBlur_HostBindingHandler","target","input","hasValue","classes","getClasses","setClasses","closest","startsWith","substring","remove","search","IonicRouteStrategy","shouldDetach","_route","shouldAttach","store","_detachedTree","retrieve","shouldReuseRoute","future","curr","futureParams","currentParams","keysA","keys","keysB","OverlayBaseController","ctrl","dismiss","role","getTop"],"sources":["C:/Users/there/OneDrive/Desktop/ERU - Capstone/Admin/node_modules/@ionic/angular/fesm2020/ionic-angular-common.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Inject, Optional, InjectionToken, inject, NgZone, ApplicationRef, Injector, createComponent, TemplateRef, Directive, ContentChild, EventEmitter, ViewContainerRef, EnvironmentInjector, Attribute, SkipSelf, Input, Output, reflectComponentType, HostListener, ElementRef, ViewChild } from '@angular/core';\nimport * as i3 from '@angular/router';\nimport { NavigationStart, PRIMARY_OUTLET, ChildrenOutletContexts, ActivatedRoute, Router } from '@angular/router';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport { isPlatform, getPlatforms, LIFECYCLE_WILL_ENTER, LIFECYCLE_DID_ENTER, LIFECYCLE_WILL_LEAVE, LIFECYCLE_DID_LEAVE, LIFECYCLE_WILL_UNLOAD, componentOnReady } from '@ionic/core/components';\nimport { Subject, fromEvent, BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { __decorate } from 'tslib';\nimport { filter, switchMap, distinctUntilChanged } from 'rxjs/operators';\nimport { NgControl } from '@angular/forms';\n\nclass MenuController {\n    constructor(menuController) {\n        this.menuController = menuController;\n    }\n    /**\n     * Programmatically open the Menu.\n     * @param [menuId]  Optionally get the menu by its id, or side.\n     * @return returns a promise when the menu is fully opened\n     */\n    open(menuId) {\n        return this.menuController.open(menuId);\n    }\n    /**\n     * Programmatically close the Menu. If no `menuId` is given as the first\n     * argument then it'll close any menu which is open. If a `menuId`\n     * is given then it'll close that exact menu.\n     * @param [menuId]  Optionally get the menu by its id, or side.\n     * @return returns a promise when the menu is fully closed\n     */\n    close(menuId) {\n        return this.menuController.close(menuId);\n    }\n    /**\n     * Toggle the menu. If it's closed, it will open, and if opened, it\n     * will close.\n     * @param [menuId]  Optionally get the menu by its id, or side.\n     * @return returns a promise when the menu has been toggled\n     */\n    toggle(menuId) {\n        return this.menuController.toggle(menuId);\n    }\n    /**\n     * Used to enable or disable a menu. For example, there could be multiple\n     * left menus, but only one of them should be able to be opened at the same\n     * time. If there are multiple menus on the same side, then enabling one menu\n     * will also automatically disable all the others that are on the same side.\n     * @param [menuId]  Optionally get the menu by its id, or side.\n     * @return Returns the instance of the menu, which is useful for chaining.\n     */\n    enable(shouldEnable, menuId) {\n        return this.menuController.enable(shouldEnable, menuId);\n    }\n    /**\n     * Used to enable or disable the ability to swipe open the menu.\n     * @param shouldEnable  True if it should be swipe-able, false if not.\n     * @param [menuId]  Optionally get the menu by its id, or side.\n     * @return Returns the instance of the menu, which is useful for chaining.\n     */\n    swipeGesture(shouldEnable, menuId) {\n        return this.menuController.swipeGesture(shouldEnable, menuId);\n    }\n    /**\n     * @param [menuId] Optionally get the menu by its id, or side.\n     * @return Returns true if the specified menu is currently open, otherwise false.\n     * If the menuId is not specified, it returns true if ANY menu is currenly open.\n     */\n    isOpen(menuId) {\n        return this.menuController.isOpen(menuId);\n    }\n    /**\n     * @param [menuId]  Optionally get the menu by its id, or side.\n     * @return Returns true if the menu is currently enabled, otherwise false.\n     */\n    isEnabled(menuId) {\n        return this.menuController.isEnabled(menuId);\n    }\n    /**\n     * Used to get a menu instance. If a `menuId` is not provided then it'll\n     * return the first menu found. If a `menuId` is `left` or `right`, then\n     * it'll return the enabled menu on that side. Otherwise, if a `menuId` is\n     * provided, then it'll try to find the menu using the menu's `id`\n     * property. If a menu is not found then it'll return `null`.\n     * @param [menuId]  Optionally get the menu by its id, or side.\n     * @return Returns the instance of the menu if found, otherwise `null`.\n     */\n    get(menuId) {\n        return this.menuController.get(menuId);\n    }\n    /**\n     * @return Returns the instance of the menu already opened, otherwise `null`.\n     */\n    getOpen() {\n        return this.menuController.getOpen();\n    }\n    /**\n     * @return Returns an array of all menu instances.\n     */\n    getMenus() {\n        return this.menuController.getMenus();\n    }\n}\n\nclass DomController {\n    /**\n     * Schedules a task to run during the READ phase of the next frame.\n     * This task should only read the DOM, but never modify it.\n     */\n    read(cb) {\n        getQueue().read(cb);\n    }\n    /**\n     * Schedules a task to run during the WRITE phase of the next frame.\n     * This task should write the DOM, but never READ it.\n     */\n    write(cb) {\n        getQueue().write(cb);\n    }\n}\n/** @nocollapse */ DomController.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: DomController, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ DomController.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: DomController, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: DomController, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\nconst getQueue = () => {\n    const win = typeof window !== 'undefined' ? window : null;\n    if (win != null) {\n        const Ionic = win.Ionic;\n        if (Ionic?.queue) {\n            return Ionic.queue;\n        }\n        return {\n            read: (cb) => win.requestAnimationFrame(cb),\n            write: (cb) => win.requestAnimationFrame(cb),\n        };\n    }\n    return {\n        read: (cb) => cb(),\n        write: (cb) => cb(),\n    };\n};\n\nclass Platform {\n    constructor(doc, zone) {\n        this.doc = doc;\n        /**\n         * @hidden\n         */\n        this.backButton = new Subject();\n        /**\n         * The keyboardDidShow event emits when the\n         * on-screen keyboard is presented.\n         */\n        this.keyboardDidShow = new Subject();\n        /**\n         * The keyboardDidHide event emits when the\n         * on-screen keyboard is hidden.\n         */\n        this.keyboardDidHide = new Subject();\n        /**\n         * The pause event emits when the native platform puts the application\n         * into the background, typically when the user switches to a different\n         * application. This event would emit when a Cordova app is put into\n         * the background, however, it would not fire on a standard web browser.\n         */\n        this.pause = new Subject();\n        /**\n         * The resume event emits when the native platform pulls the application\n         * out from the background. This event would emit when a Cordova app comes\n         * out from the background, however, it would not fire on a standard web browser.\n         */\n        this.resume = new Subject();\n        /**\n         * The resize event emits when the browser window has changed dimensions. This\n         * could be from a browser window being physically resized, or from a device\n         * changing orientation.\n         */\n        this.resize = new Subject();\n        zone.run(() => {\n            this.win = doc.defaultView;\n            this.backButton.subscribeWithPriority = function (priority, callback) {\n                return this.subscribe((ev) => {\n                    return ev.register(priority, (processNextHandler) => zone.run(() => callback(processNextHandler)));\n                });\n            };\n            proxyEvent(this.pause, doc, 'pause', zone);\n            proxyEvent(this.resume, doc, 'resume', zone);\n            proxyEvent(this.backButton, doc, 'ionBackButton', zone);\n            proxyEvent(this.resize, this.win, 'resize', zone);\n            proxyEvent(this.keyboardDidShow, this.win, 'ionKeyboardDidShow', zone);\n            proxyEvent(this.keyboardDidHide, this.win, 'ionKeyboardDidHide', zone);\n            let readyResolve;\n            this._readyPromise = new Promise((res) => {\n                readyResolve = res;\n            });\n            if (this.win?.['cordova']) {\n                doc.addEventListener('deviceready', () => {\n                    readyResolve('cordova');\n                }, { once: true });\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                readyResolve('dom');\n            }\n        });\n    }\n    /**\n     * @returns returns true/false based on platform.\n     * @description\n     * Depending on the platform the user is on, `is(platformName)` will\n     * return `true` or `false`. Note that the same app can return `true`\n     * for more than one platform name. For example, an app running from\n     * an iPad would return `true` for the platform names: `mobile`,\n     * `ios`, `ipad`, and `tablet`. Additionally, if the app was running\n     * from Cordova then `cordova` would be true, and if it was running\n     * from a web browser on the iPad then `mobileweb` would be `true`.\n     *\n     * ```\n     * import { Platform } from 'ionic-angular';\n     *\n     * @Component({...})\n     * export MyPage {\n     *   constructor(public platform: Platform) {\n     *     if (this.platform.is('ios')) {\n     *       // This will only print when on iOS\n     *       console.log('I am an iOS device!');\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * | Platform Name   | Description                        |\n     * |-----------------|------------------------------------|\n     * | android         | on a device running Android.       |\n     * | capacitor       | on a device running Capacitor.     |\n     * | cordova         | on a device running Cordova.       |\n     * | ios             | on a device running iOS.           |\n     * | ipad            | on an iPad device.                 |\n     * | iphone          | on an iPhone device.               |\n     * | phablet         | on a phablet device.               |\n     * | tablet          | on a tablet device.                |\n     * | electron        | in Electron on a desktop device.   |\n     * | pwa             | as a PWA app.                      |\n     * | mobile          | on a mobile device.                |\n     * | mobileweb       | on a mobile device in a browser.   |\n     * | desktop         | on a desktop device.               |\n     * | hybrid          | is a cordova or capacitor app.     |\n     *\n     */\n    is(platformName) {\n        return isPlatform(this.win, platformName);\n    }\n    /**\n     * @returns the array of platforms\n     * @description\n     * Depending on what device you are on, `platforms` can return multiple values.\n     * Each possible value is a hierarchy of platforms. For example, on an iPhone,\n     * it would return `mobile`, `ios`, and `iphone`.\n     *\n     * ```\n     * import { Platform } from 'ionic-angular';\n     *\n     * @Component({...})\n     * export MyPage {\n     *   constructor(public platform: Platform) {\n     *     // This will print an array of the current platforms\n     *     console.log(this.platform.platforms());\n     *   }\n     * }\n     * ```\n     */\n    platforms() {\n        return getPlatforms(this.win);\n    }\n    /**\n     * Returns a promise when the platform is ready and native functionality\n     * can be called. If the app is running from within a web browser, then\n     * the promise will resolve when the DOM is ready. When the app is running\n     * from an application engine such as Cordova, then the promise will\n     * resolve when Cordova triggers the `deviceready` event.\n     *\n     * The resolved value is the `readySource`, which states which platform\n     * ready was used. For example, when Cordova is ready, the resolved ready\n     * source is `cordova`. The default ready source value will be `dom`. The\n     * `readySource` is useful if different logic should run depending on the\n     * platform the app is running from. For example, only Cordova can execute\n     * the status bar plugin, so the web should not run status bar plugin logic.\n     *\n     * ```\n     * import { Component } from '@angular/core';\n     * import { Platform } from 'ionic-angular';\n     *\n     * @Component({...})\n     * export MyApp {\n     *   constructor(public platform: Platform) {\n     *     this.platform.ready().then((readySource) => {\n     *       console.log('Platform ready from', readySource);\n     *       // Platform now ready, execute any required native code\n     *     });\n     *   }\n     * }\n     * ```\n     */\n    ready() {\n        return this._readyPromise;\n    }\n    /**\n     * Returns if this app is using right-to-left language direction or not.\n     * We recommend the app's `index.html` file already has the correct `dir`\n     * attribute value set, such as `<html dir=\"ltr\">` or `<html dir=\"rtl\">`.\n     * [W3C: Structural markup and right-to-left text in HTML](http://www.w3.org/International/questions/qa-html-dir)\n     */\n    get isRTL() {\n        return this.doc.dir === 'rtl';\n    }\n    /**\n     * Get the query string parameter\n     */\n    getQueryParam(key) {\n        return readQueryParam(this.win.location.href, key);\n    }\n    /**\n     * Returns `true` if the app is in landscape mode.\n     */\n    isLandscape() {\n        return !this.isPortrait();\n    }\n    /**\n     * Returns `true` if the app is in portrait mode.\n     */\n    isPortrait() {\n        return this.win.matchMedia?.('(orientation: portrait)').matches;\n    }\n    testUserAgent(expression) {\n        const nav = this.win.navigator;\n        return !!(nav?.userAgent && nav.userAgent.indexOf(expression) >= 0);\n    }\n    /**\n     * Get the current url.\n     */\n    url() {\n        return this.win.location.href;\n    }\n    /**\n     * Gets the width of the platform's viewport using `window.innerWidth`.\n     */\n    width() {\n        return this.win.innerWidth;\n    }\n    /**\n     * Gets the height of the platform's viewport using `window.innerHeight`.\n     */\n    height() {\n        return this.win.innerHeight;\n    }\n}\n/** @nocollapse */ Platform.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: Platform, deps: [{ token: DOCUMENT }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ Platform.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: Platform, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: Platform, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }]; } });\nconst readQueryParam = (url, key) => {\n    key = key.replace(/[[\\]\\\\]/g, '\\\\$&');\n    const regex = new RegExp('[\\\\?&]' + key + '=([^&#]*)');\n    const results = regex.exec(url);\n    return results ? decodeURIComponent(results[1].replace(/\\+/g, ' ')) : null;\n};\nconst proxyEvent = (emitter, el, eventName, zone) => {\n    if (el) {\n        el.addEventListener(eventName, (ev) => {\n            /**\n             * `zone.run` is required to make sure that we are running inside the Angular zone\n             * at all times. This is necessary since an app that has Capacitor will\n             * override the `document.addEventListener` with its own implementation.\n             * The override causes the event to no longer be in the Angular zone.\n             */\n            zone.run(() => {\n                // ?? cordova might emit \"null\" events\n                const value = ev != null ? ev.detail : undefined;\n                emitter.next(value);\n            });\n        });\n    }\n};\n\nclass NavController {\n    constructor(platform, location, serializer, router) {\n        this.location = location;\n        this.serializer = serializer;\n        this.router = router;\n        this.direction = DEFAULT_DIRECTION;\n        this.animated = DEFAULT_ANIMATED;\n        this.guessDirection = 'forward';\n        this.lastNavId = -1;\n        // Subscribe to router events to detect direction\n        if (router) {\n            router.events.subscribe((ev) => {\n                if (ev instanceof NavigationStart) {\n                    const id = ev.restoredState ? ev.restoredState.navigationId : ev.id;\n                    this.guessDirection = id < this.lastNavId ? 'back' : 'forward';\n                    this.guessAnimation = !ev.restoredState ? this.guessDirection : undefined;\n                    this.lastNavId = this.guessDirection === 'forward' ? ev.id : id;\n                }\n            });\n        }\n        // Subscribe to backButton events\n        platform.backButton.subscribeWithPriority(0, (processNextHandler) => {\n            this.pop();\n            processNextHandler();\n        });\n    }\n    /**\n     * This method uses Angular's [Router](https://angular.io/api/router/Router) under the hood,\n     * it's equivalent to calling `this.router.navigateByUrl()`, but it's explicit about the **direction** of the transition.\n     *\n     * Going **forward** means that a new page is going to be pushed to the stack of the outlet (ion-router-outlet),\n     * and that it will show a \"forward\" animation by default.\n     *\n     * Navigating forward can also be triggered in a declarative manner by using the `[routerDirection]` directive:\n     *\n     * ```html\n     * <a routerLink=\"/path/to/page\" routerDirection=\"forward\">Link</a>\n     * ```\n     */\n    navigateForward(url, options = {}) {\n        this.setDirection('forward', options.animated, options.animationDirection, options.animation);\n        return this.navigate(url, options);\n    }\n    /**\n     * This method uses Angular's [Router](https://angular.io/api/router/Router) under the hood,\n     * it's equivalent to calling:\n     *\n     * ```ts\n     * this.navController.setDirection('back');\n     * this.router.navigateByUrl(path);\n     * ```\n     *\n     * Going **back** means that all the pages in the stack until the navigated page is found will be popped,\n     * and that it will show a \"back\" animation by default.\n     *\n     * Navigating back can also be triggered in a declarative manner by using the `[routerDirection]` directive:\n     *\n     * ```html\n     * <a routerLink=\"/path/to/page\" routerDirection=\"back\">Link</a>\n     * ```\n     */\n    navigateBack(url, options = {}) {\n        this.setDirection('back', options.animated, options.animationDirection, options.animation);\n        return this.navigate(url, options);\n    }\n    /**\n     * This method uses Angular's [Router](https://angular.io/api/router/Router) under the hood,\n     * it's equivalent to calling:\n     *\n     * ```ts\n     * this.navController.setDirection('root');\n     * this.router.navigateByUrl(path);\n     * ```\n     *\n     * Going **root** means that all existing pages in the stack will be removed,\n     * and the navigated page will become the single page in the stack.\n     *\n     * Navigating root can also be triggered in a declarative manner by using the `[routerDirection]` directive:\n     *\n     * ```html\n     * <a routerLink=\"/path/to/page\" routerDirection=\"root\">Link</a>\n     * ```\n     */\n    navigateRoot(url, options = {}) {\n        this.setDirection('root', options.animated, options.animationDirection, options.animation);\n        return this.navigate(url, options);\n    }\n    /**\n     * Same as [Location](https://angular.io/api/common/Location)'s back() method.\n     * It will use the standard `window.history.back()` under the hood, but featuring a `back` animation\n     * by default.\n     */\n    back(options = { animated: true, animationDirection: 'back' }) {\n        this.setDirection('back', options.animated, options.animationDirection, options.animation);\n        return this.location.back();\n    }\n    /**\n     * This methods goes back in the context of Ionic's stack navigation.\n     *\n     * It recursively finds the top active `ion-router-outlet` and calls `pop()`.\n     * This is the recommended way to go back when you are using `ion-router-outlet`.\n     *\n     * Resolves to `true` if it was able to pop.\n     */\n    async pop() {\n        let outlet = this.topOutlet;\n        while (outlet) {\n            if (await outlet.pop()) {\n                return true;\n            }\n            else {\n                outlet = outlet.parentOutlet;\n            }\n        }\n        return false;\n    }\n    /**\n     * This methods specifies the direction of the next navigation performed by the Angular router.\n     *\n     * `setDirection()` does not trigger any transition, it just sets some flags to be consumed by `ion-router-outlet`.\n     *\n     * It's recommended to use `navigateForward()`, `navigateBack()` and `navigateRoot()` instead of `setDirection()`.\n     */\n    setDirection(direction, animated, animationDirection, animationBuilder) {\n        this.direction = direction;\n        this.animated = getAnimation(direction, animated, animationDirection);\n        this.animationBuilder = animationBuilder;\n    }\n    /**\n     * @internal\n     */\n    setTopOutlet(outlet) {\n        this.topOutlet = outlet;\n    }\n    /**\n     * @internal\n     */\n    consumeTransition() {\n        let direction = 'root';\n        let animation;\n        const animationBuilder = this.animationBuilder;\n        if (this.direction === 'auto') {\n            direction = this.guessDirection;\n            animation = this.guessAnimation;\n        }\n        else {\n            animation = this.animated;\n            direction = this.direction;\n        }\n        this.direction = DEFAULT_DIRECTION;\n        this.animated = DEFAULT_ANIMATED;\n        this.animationBuilder = undefined;\n        return {\n            direction,\n            animation,\n            animationBuilder,\n        };\n    }\n    navigate(url, options) {\n        if (Array.isArray(url)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return this.router.navigate(url, options);\n        }\n        else {\n            /**\n             * navigateByUrl ignores any properties that\n             * would change the url, so things like queryParams\n             * would be ignored unless we create a url tree\n             * More Info: https://github.com/angular/angular/issues/18798\n             */\n            const urlTree = this.serializer.parse(url.toString());\n            if (options.queryParams !== undefined) {\n                urlTree.queryParams = { ...options.queryParams };\n            }\n            if (options.fragment !== undefined) {\n                urlTree.fragment = options.fragment;\n            }\n            /**\n             * `navigateByUrl` will still apply `NavigationExtras` properties\n             * that do not modify the url, such as `replaceUrl` which is why\n             * `options` is passed in here.\n             */\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return this.router.navigateByUrl(urlTree, options);\n        }\n    }\n}\n/** @nocollapse */ NavController.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NavController, deps: [{ token: Platform }, { token: i1.Location }, { token: i3.UrlSerializer }, { token: i3.Router, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ NavController.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NavController, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NavController, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: Platform }, { type: i1.Location }, { type: i3.UrlSerializer }, { type: i3.Router, decorators: [{\n                    type: Optional\n                }] }]; } });\nconst getAnimation = (direction, animated, animationDirection) => {\n    if (animated === false) {\n        return undefined;\n    }\n    if (animationDirection !== undefined) {\n        return animationDirection;\n    }\n    if (direction === 'forward' || direction === 'back') {\n        return direction;\n    }\n    else if (direction === 'root' && animated === true) {\n        return 'forward';\n    }\n    return undefined;\n};\nconst DEFAULT_DIRECTION = 'auto';\nconst DEFAULT_ANIMATED = undefined;\n\nclass Config {\n    get(key, fallback) {\n        const c = getConfig();\n        if (c) {\n            return c.get(key, fallback);\n        }\n        return null;\n    }\n    getBoolean(key, fallback) {\n        const c = getConfig();\n        if (c) {\n            return c.getBoolean(key, fallback);\n        }\n        return false;\n    }\n    getNumber(key, fallback) {\n        const c = getConfig();\n        if (c) {\n            return c.getNumber(key, fallback);\n        }\n        return 0;\n    }\n}\n/** @nocollapse */ Config.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: Config, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ Config.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: Config, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: Config, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\nconst ConfigToken = new InjectionToken('USERCONFIG');\nconst getConfig = () => {\n    if (typeof window !== 'undefined') {\n        const Ionic = window.Ionic;\n        if (Ionic?.config) {\n            return Ionic.config;\n        }\n    }\n    return null;\n};\n\n/**\n * @description\n * NavParams are an object that exists on a page and can contain data for that particular view.\n * Similar to how data was pass to a view in V1 with `$stateParams`, NavParams offer a much more flexible\n * option with a simple `get` method.\n *\n * @usage\n * ```ts\n * import { NavParams } from '@ionic/angular';\n *\n * export class MyClass{\n *\n *  constructor(navParams: NavParams){\n *    // userParams is an object we have in our nav-parameters\n *    navParams.get('userParams');\n *  }\n *\n * }\n * ```\n */\nclass NavParams {\n    constructor(data = {}) {\n        this.data = data;\n    }\n    /**\n     * Get the value of a nav-parameter for the current view\n     *\n     * ```ts\n     * import { NavParams } from 'ionic-angular';\n     *\n     * export class MyClass{\n     *  constructor(public navParams: NavParams){\n     *    // userParams is an object we have in our nav-parameters\n     *    this.navParams.get('userParams');\n     *  }\n     * }\n     * ```\n     *\n     * @param param Which param you want to look up\n     */\n    get(param) {\n        return this.data[param];\n    }\n}\n\n// TODO(FW-2827): types\nclass AngularDelegate {\n    constructor() {\n        this.zone = inject(NgZone);\n        this.applicationRef = inject(ApplicationRef);\n    }\n    create(environmentInjector, injector, elementReferenceKey) {\n        return new AngularFrameworkDelegate(environmentInjector, injector, this.applicationRef, this.zone, elementReferenceKey);\n    }\n}\n/** @nocollapse */ AngularDelegate.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: AngularDelegate, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ AngularDelegate.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: AngularDelegate });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: AngularDelegate, decorators: [{\n            type: Injectable\n        }] });\nclass AngularFrameworkDelegate {\n    constructor(environmentInjector, injector, applicationRef, zone, elementReferenceKey) {\n        this.environmentInjector = environmentInjector;\n        this.injector = injector;\n        this.applicationRef = applicationRef;\n        this.zone = zone;\n        this.elementReferenceKey = elementReferenceKey;\n        this.elRefMap = new WeakMap();\n        this.elEventsMap = new WeakMap();\n    }\n    attachViewToDom(container, component, params, cssClasses) {\n        return this.zone.run(() => {\n            return new Promise((resolve) => {\n                const componentProps = {\n                    ...params,\n                };\n                /**\n                 * Ionic Angular passes a reference to a modal\n                 * or popover that can be accessed using a\n                 * variable in the overlay component. If\n                 * elementReferenceKey is defined, then we should\n                 * pass a reference to the component using\n                 * elementReferenceKey as the key.\n                 */\n                if (this.elementReferenceKey !== undefined) {\n                    componentProps[this.elementReferenceKey] = container;\n                }\n                const el = attachView(this.zone, this.environmentInjector, this.injector, this.applicationRef, this.elRefMap, this.elEventsMap, container, component, componentProps, cssClasses, this.elementReferenceKey);\n                resolve(el);\n            });\n        });\n    }\n    removeViewFromDom(_container, component) {\n        return this.zone.run(() => {\n            return new Promise((resolve) => {\n                const componentRef = this.elRefMap.get(component);\n                if (componentRef) {\n                    componentRef.destroy();\n                    this.elRefMap.delete(component);\n                    const unbindEvents = this.elEventsMap.get(component);\n                    if (unbindEvents) {\n                        unbindEvents();\n                        this.elEventsMap.delete(component);\n                    }\n                }\n                resolve();\n            });\n        });\n    }\n}\nconst attachView = (zone, environmentInjector, injector, applicationRef, elRefMap, elEventsMap, container, component, params, cssClasses, elementReferenceKey) => {\n    /**\n     * Wraps the injector with a custom injector that\n     * provides NavParams to the component.\n     *\n     * NavParams is a legacy feature from Ionic v3 that allows\n     * Angular developers to provide data to a component\n     * and access it by providing NavParams as a dependency\n     * in the constructor.\n     *\n     * The modern approach is to access the data directly\n     * from the component's class instance.\n     */\n    const childInjector = Injector.create({\n        providers: getProviders(params),\n        parent: injector,\n    });\n    const componentRef = createComponent(component, {\n        environmentInjector,\n        elementInjector: childInjector,\n    });\n    const instance = componentRef.instance;\n    const hostElement = componentRef.location.nativeElement;\n    if (params) {\n        /**\n         * For modals and popovers, a reference to the component is\n         * added to `params` during the call to attachViewToDom. If\n         * a reference using this name is already set, this means\n         * the app is trying to use the name as a component prop,\n         * which will cause collisions.\n         */\n        if (elementReferenceKey && instance[elementReferenceKey] !== undefined) {\n            console.error(`[Ionic Error]: ${elementReferenceKey} is a reserved property when using ${container.tagName.toLowerCase()}. Rename or remove the \"${elementReferenceKey}\" property from ${component.name}.`);\n        }\n        Object.assign(instance, params);\n    }\n    if (cssClasses) {\n        for (const cssClass of cssClasses) {\n            hostElement.classList.add(cssClass);\n        }\n    }\n    const unbindEvents = bindLifecycleEvents(zone, instance, hostElement);\n    container.appendChild(hostElement);\n    applicationRef.attachView(componentRef.hostView);\n    elRefMap.set(hostElement, componentRef);\n    elEventsMap.set(hostElement, unbindEvents);\n    return hostElement;\n};\nconst LIFECYCLES = [\n    LIFECYCLE_WILL_ENTER,\n    LIFECYCLE_DID_ENTER,\n    LIFECYCLE_WILL_LEAVE,\n    LIFECYCLE_DID_LEAVE,\n    LIFECYCLE_WILL_UNLOAD,\n];\nconst bindLifecycleEvents = (zone, instance, element) => {\n    return zone.run(() => {\n        const unregisters = LIFECYCLES.filter((eventName) => typeof instance[eventName] === 'function').map((eventName) => {\n            const handler = (ev) => instance[eventName](ev.detail);\n            element.addEventListener(eventName, handler);\n            return () => element.removeEventListener(eventName, handler);\n        });\n        return () => unregisters.forEach((fn) => fn());\n    });\n};\nconst NavParamsToken = new InjectionToken('NavParamsToken');\nconst getProviders = (params) => {\n    return [\n        {\n            provide: NavParamsToken,\n            useValue: params,\n        },\n        {\n            provide: NavParams,\n            useFactory: provideNavParamsInjectable,\n            deps: [NavParamsToken],\n        },\n    ];\n};\nconst provideNavParamsInjectable = (params) => {\n    return new NavParams(params);\n};\n\n// TODO: Is there a way we can grab this from angular-component-lib instead?\nconst proxyInputs = (Cmp, inputs) => {\n    const Prototype = Cmp.prototype;\n    inputs.forEach((item) => {\n        Object.defineProperty(Prototype, item, {\n            get() {\n                return this.el[item];\n            },\n            set(val) {\n                this.z.runOutsideAngular(() => (this.el[item] = val));\n            },\n        });\n    });\n};\nconst proxyMethods = (Cmp, methods) => {\n    const Prototype = Cmp.prototype;\n    methods.forEach((methodName) => {\n        Prototype[methodName] = function () {\n            const args = arguments;\n            return this.z.runOutsideAngular(() => this.el[methodName].apply(this.el, args));\n        };\n    });\n};\nconst proxyOutputs = (instance, el, events) => {\n    events.forEach((eventName) => (instance[eventName] = fromEvent(el, eventName)));\n};\n// tslint:disable-next-line: only-arrow-functions\nfunction ProxyCmp(opts) {\n    const decorator = function (cls) {\n        const { defineCustomElementFn, inputs, methods } = opts;\n        if (defineCustomElementFn !== undefined) {\n            defineCustomElementFn();\n        }\n        if (inputs) {\n            proxyInputs(cls, inputs);\n        }\n        if (methods) {\n            proxyMethods(cls, methods);\n        }\n        return cls;\n    };\n    return decorator;\n}\n\nconst POPOVER_INPUTS = [\n    'alignment',\n    'animated',\n    'arrow',\n    'keepContentsMounted',\n    'backdropDismiss',\n    'cssClass',\n    'dismissOnSelect',\n    'enterAnimation',\n    'event',\n    'isOpen',\n    'keyboardClose',\n    'leaveAnimation',\n    'mode',\n    'showBackdrop',\n    'translucent',\n    'trigger',\n    'triggerAction',\n    'reference',\n    'size',\n    'side',\n];\nconst POPOVER_METHODS = ['present', 'dismiss', 'onDidDismiss', 'onWillDismiss'];\nlet IonPopover = class IonPopover {\n    constructor(c, r, z) {\n        this.z = z;\n        this.isCmpOpen = false;\n        this.el = r.nativeElement;\n        this.el.addEventListener('ionMount', () => {\n            this.isCmpOpen = true;\n            c.detectChanges();\n        });\n        this.el.addEventListener('didDismiss', () => {\n            this.isCmpOpen = false;\n            c.detectChanges();\n        });\n        proxyOutputs(this, this.el, [\n            'ionPopoverDidPresent',\n            'ionPopoverWillPresent',\n            'ionPopoverWillDismiss',\n            'ionPopoverDidDismiss',\n            'didPresent',\n            'willPresent',\n            'willDismiss',\n            'didDismiss',\n        ]);\n    }\n};\n/** @nocollapse */ IonPopover.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: IonPopover, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ IonPopover.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.12\", type: IonPopover, selector: \"ion-popover\", inputs: { alignment: \"alignment\", animated: \"animated\", arrow: \"arrow\", keepContentsMounted: \"keepContentsMounted\", backdropDismiss: \"backdropDismiss\", cssClass: \"cssClass\", dismissOnSelect: \"dismissOnSelect\", enterAnimation: \"enterAnimation\", event: \"event\", isOpen: \"isOpen\", keyboardClose: \"keyboardClose\", leaveAnimation: \"leaveAnimation\", mode: \"mode\", showBackdrop: \"showBackdrop\", translucent: \"translucent\", trigger: \"trigger\", triggerAction: \"triggerAction\", reference: \"reference\", size: \"size\", side: \"side\" }, queries: [{ propertyName: \"template\", first: true, predicate: TemplateRef, descendants: true }], ngImport: i0 });\nIonPopover = __decorate([\n    ProxyCmp({\n        inputs: POPOVER_INPUTS,\n        methods: POPOVER_METHODS,\n    })\n    /**\n     * @Component extends from @Directive\n     * so by defining the inputs here we\n     * do not need to re-define them for the\n     * lazy loaded popover.\n     */\n], IonPopover);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: IonPopover, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ion-popover',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: POPOVER_INPUTS,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { template: [{\n                type: ContentChild,\n                args: [TemplateRef, { static: false }]\n            }] } });\n\nconst MODAL_INPUTS = [\n    'animated',\n    'keepContentsMounted',\n    'backdropBreakpoint',\n    'backdropDismiss',\n    'breakpoints',\n    'canDismiss',\n    'cssClass',\n    'enterAnimation',\n    'event',\n    'handle',\n    'handleBehavior',\n    'initialBreakpoint',\n    'isOpen',\n    'keyboardClose',\n    'leaveAnimation',\n    'mode',\n    'presentingElement',\n    'showBackdrop',\n    'translucent',\n    'trigger',\n];\nconst MODAL_METHODS = [\n    'present',\n    'dismiss',\n    'onDidDismiss',\n    'onWillDismiss',\n    'setCurrentBreakpoint',\n    'getCurrentBreakpoint',\n];\nlet IonModal = class IonModal {\n    constructor(c, r, z) {\n        this.z = z;\n        this.isCmpOpen = false;\n        this.el = r.nativeElement;\n        this.el.addEventListener('ionMount', () => {\n            this.isCmpOpen = true;\n            c.detectChanges();\n        });\n        this.el.addEventListener('didDismiss', () => {\n            this.isCmpOpen = false;\n            c.detectChanges();\n        });\n        proxyOutputs(this, this.el, [\n            'ionModalDidPresent',\n            'ionModalWillPresent',\n            'ionModalWillDismiss',\n            'ionModalDidDismiss',\n            'ionBreakpointDidChange',\n            'didPresent',\n            'willPresent',\n            'willDismiss',\n            'didDismiss',\n        ]);\n    }\n};\n/** @nocollapse */ IonModal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: IonModal, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ IonModal.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.12\", type: IonModal, selector: \"ion-modal\", inputs: { animated: \"animated\", keepContentsMounted: \"keepContentsMounted\", backdropBreakpoint: \"backdropBreakpoint\", backdropDismiss: \"backdropDismiss\", breakpoints: \"breakpoints\", canDismiss: \"canDismiss\", cssClass: \"cssClass\", enterAnimation: \"enterAnimation\", event: \"event\", handle: \"handle\", handleBehavior: \"handleBehavior\", initialBreakpoint: \"initialBreakpoint\", isOpen: \"isOpen\", keyboardClose: \"keyboardClose\", leaveAnimation: \"leaveAnimation\", mode: \"mode\", presentingElement: \"presentingElement\", showBackdrop: \"showBackdrop\", translucent: \"translucent\", trigger: \"trigger\" }, queries: [{ propertyName: \"template\", first: true, predicate: TemplateRef, descendants: true }], ngImport: i0 });\nIonModal = __decorate([\n    ProxyCmp({\n        inputs: MODAL_INPUTS,\n        methods: MODAL_METHODS,\n    })\n    /**\n     * @Component extends from @Directive\n     * so by defining the inputs here we\n     * do not need to re-define them for the\n     * lazy loaded popover.\n     */\n], IonModal);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: IonModal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ion-modal',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: MODAL_INPUTS,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { template: [{\n                type: ContentChild,\n                args: [TemplateRef, { static: false }]\n            }] } });\n\nconst insertView = (views, view, direction) => {\n    if (direction === 'root') {\n        return setRoot(views, view);\n    }\n    else if (direction === 'forward') {\n        return setForward(views, view);\n    }\n    else {\n        return setBack(views, view);\n    }\n};\nconst setRoot = (views, view) => {\n    views = views.filter((v) => v.stackId !== view.stackId);\n    views.push(view);\n    return views;\n};\nconst setForward = (views, view) => {\n    const index = views.indexOf(view);\n    if (index >= 0) {\n        views = views.filter((v) => v.stackId !== view.stackId || v.id <= view.id);\n    }\n    else {\n        views.push(view);\n    }\n    return views;\n};\nconst setBack = (views, view) => {\n    const index = views.indexOf(view);\n    if (index >= 0) {\n        return views.filter((v) => v.stackId !== view.stackId || v.id <= view.id);\n    }\n    else {\n        return setRoot(views, view);\n    }\n};\nconst getUrl = (router, activatedRoute) => {\n    const urlTree = router.createUrlTree(['.'], { relativeTo: activatedRoute });\n    return router.serializeUrl(urlTree);\n};\nconst isTabSwitch = (enteringView, leavingView) => {\n    if (!leavingView) {\n        return true;\n    }\n    return enteringView.stackId !== leavingView.stackId;\n};\nconst computeStackId = (prefixUrl, url) => {\n    if (!prefixUrl) {\n        return undefined;\n    }\n    const segments = toSegments(url);\n    for (let i = 0; i < segments.length; i++) {\n        if (i >= prefixUrl.length) {\n            return segments[i];\n        }\n        if (segments[i] !== prefixUrl[i]) {\n            return undefined;\n        }\n    }\n    return undefined;\n};\nconst toSegments = (path) => {\n    return path\n        .split('/')\n        .map((s) => s.trim())\n        .filter((s) => s !== '');\n};\nconst destroyView = (view) => {\n    if (view) {\n        view.ref.destroy();\n        view.unlistenEvents();\n    }\n};\n\n// TODO(FW-2827): types\nclass StackController {\n    constructor(tabsPrefix, containerEl, router, navCtrl, zone, location) {\n        this.containerEl = containerEl;\n        this.router = router;\n        this.navCtrl = navCtrl;\n        this.zone = zone;\n        this.location = location;\n        this.views = [];\n        this.skipTransition = false;\n        this.nextId = 0;\n        this.tabsPrefix = tabsPrefix !== undefined ? toSegments(tabsPrefix) : undefined;\n    }\n    createView(ref, activatedRoute) {\n        const url = getUrl(this.router, activatedRoute);\n        const element = ref?.location?.nativeElement;\n        const unlistenEvents = bindLifecycleEvents(this.zone, ref.instance, element);\n        return {\n            id: this.nextId++,\n            stackId: computeStackId(this.tabsPrefix, url),\n            unlistenEvents,\n            element,\n            ref,\n            url,\n        };\n    }\n    getExistingView(activatedRoute) {\n        const activatedUrlKey = getUrl(this.router, activatedRoute);\n        const view = this.views.find((vw) => vw.url === activatedUrlKey);\n        if (view) {\n            view.ref.changeDetectorRef.reattach();\n        }\n        return view;\n    }\n    setActive(enteringView) {\n        const consumeResult = this.navCtrl.consumeTransition();\n        let { direction, animation, animationBuilder } = consumeResult;\n        const leavingView = this.activeView;\n        const tabSwitch = isTabSwitch(enteringView, leavingView);\n        if (tabSwitch) {\n            direction = 'back';\n            animation = undefined;\n        }\n        const viewsSnapshot = this.views.slice();\n        let currentNavigation;\n        const router = this.router;\n        // Angular >= 7.2.0\n        if (router.getCurrentNavigation) {\n            currentNavigation = router.getCurrentNavigation();\n            // Angular < 7.2.0\n        }\n        else if (router.navigations?.value) {\n            currentNavigation = router.navigations.value;\n        }\n        /**\n         * If the navigation action\n         * sets `replaceUrl: true`\n         * then we need to make sure\n         * we remove the last item\n         * from our views stack\n         */\n        if (currentNavigation?.extras?.replaceUrl) {\n            if (this.views.length > 0) {\n                this.views.splice(-1, 1);\n            }\n        }\n        const reused = this.views.includes(enteringView);\n        const views = this.insertView(enteringView, direction);\n        // Trigger change detection before transition starts\n        // This will call ngOnInit() the first time too, just after the view\n        // was attached to the dom, but BEFORE the transition starts\n        if (!reused) {\n            enteringView.ref.changeDetectorRef.detectChanges();\n        }\n        /**\n         * If we are going back from a page that\n         * was presented using a custom animation\n         * we should default to using that\n         * unless the developer explicitly\n         * provided another animation.\n         */\n        const customAnimation = enteringView.animationBuilder;\n        if (animationBuilder === undefined && direction === 'back' && !tabSwitch && customAnimation !== undefined) {\n            animationBuilder = customAnimation;\n        }\n        /**\n         * Save any custom animation so that navigating\n         * back will use this custom animation by default.\n         */\n        if (leavingView) {\n            leavingView.animationBuilder = animationBuilder;\n        }\n        // Wait until previous transitions finish\n        return this.zone.runOutsideAngular(() => {\n            return this.wait(() => {\n                // disconnect leaving page from change detection to\n                // reduce jank during the page transition\n                if (leavingView) {\n                    leavingView.ref.changeDetectorRef.detach();\n                }\n                // In case the enteringView is the same as the leavingPage we need to reattach()\n                enteringView.ref.changeDetectorRef.reattach();\n                return this.transition(enteringView, leavingView, animation, this.canGoBack(1), false, animationBuilder)\n                    .then(() => cleanupAsync(enteringView, views, viewsSnapshot, this.location, this.zone))\n                    .then(() => ({\n                    enteringView,\n                    direction,\n                    animation,\n                    tabSwitch,\n                }));\n            });\n        });\n    }\n    canGoBack(deep, stackId = this.getActiveStackId()) {\n        return this.getStack(stackId).length > deep;\n    }\n    pop(deep, stackId = this.getActiveStackId()) {\n        return this.zone.run(() => {\n            const views = this.getStack(stackId);\n            if (views.length <= deep) {\n                return Promise.resolve(false);\n            }\n            const view = views[views.length - deep - 1];\n            let url = view.url;\n            const viewSavedData = view.savedData;\n            if (viewSavedData) {\n                const primaryOutlet = viewSavedData.get('primary');\n                if (primaryOutlet?.route?._routerState?.snapshot.url) {\n                    url = primaryOutlet.route._routerState.snapshot.url;\n                }\n            }\n            const { animationBuilder } = this.navCtrl.consumeTransition();\n            return this.navCtrl.navigateBack(url, { ...view.savedExtras, animation: animationBuilder }).then(() => true);\n        });\n    }\n    startBackTransition() {\n        const leavingView = this.activeView;\n        if (leavingView) {\n            const views = this.getStack(leavingView.stackId);\n            const enteringView = views[views.length - 2];\n            const customAnimation = enteringView.animationBuilder;\n            return this.wait(() => {\n                return this.transition(enteringView, // entering view\n                leavingView, // leaving view\n                'back', this.canGoBack(2), true, customAnimation);\n            });\n        }\n        return Promise.resolve();\n    }\n    endBackTransition(shouldComplete) {\n        if (shouldComplete) {\n            this.skipTransition = true;\n            this.pop(1);\n        }\n        else if (this.activeView) {\n            cleanup(this.activeView, this.views, this.views, this.location, this.zone);\n        }\n    }\n    getLastUrl(stackId) {\n        const views = this.getStack(stackId);\n        return views.length > 0 ? views[views.length - 1] : undefined;\n    }\n    /**\n     * @internal\n     */\n    getRootUrl(stackId) {\n        const views = this.getStack(stackId);\n        return views.length > 0 ? views[0] : undefined;\n    }\n    getActiveStackId() {\n        return this.activeView ? this.activeView.stackId : undefined;\n    }\n    /**\n     * @internal\n     */\n    getActiveView() {\n        return this.activeView;\n    }\n    hasRunningTask() {\n        return this.runningTask !== undefined;\n    }\n    destroy() {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.containerEl = undefined;\n        this.views.forEach(destroyView);\n        this.activeView = undefined;\n        this.views = [];\n    }\n    getStack(stackId) {\n        return this.views.filter((v) => v.stackId === stackId);\n    }\n    insertView(enteringView, direction) {\n        this.activeView = enteringView;\n        this.views = insertView(this.views, enteringView, direction);\n        return this.views.slice();\n    }\n    transition(enteringView, leavingView, direction, showGoBack, progressAnimation, animationBuilder) {\n        if (this.skipTransition) {\n            this.skipTransition = false;\n            return Promise.resolve(false);\n        }\n        if (leavingView === enteringView) {\n            return Promise.resolve(false);\n        }\n        const enteringEl = enteringView ? enteringView.element : undefined;\n        const leavingEl = leavingView ? leavingView.element : undefined;\n        const containerEl = this.containerEl;\n        if (enteringEl && enteringEl !== leavingEl) {\n            enteringEl.classList.add('ion-page');\n            enteringEl.classList.add('ion-page-invisible');\n            if (enteringEl.parentElement !== containerEl) {\n                containerEl.appendChild(enteringEl);\n            }\n            if (containerEl.commit) {\n                return containerEl.commit(enteringEl, leavingEl, {\n                    duration: direction === undefined ? 0 : undefined,\n                    direction,\n                    showGoBack,\n                    progressAnimation,\n                    animationBuilder,\n                });\n            }\n        }\n        return Promise.resolve(false);\n    }\n    async wait(task) {\n        if (this.runningTask !== undefined) {\n            await this.runningTask;\n            this.runningTask = undefined;\n        }\n        const promise = (this.runningTask = task());\n        promise.finally(() => (this.runningTask = undefined));\n        return promise;\n    }\n}\nconst cleanupAsync = (activeRoute, views, viewsSnapshot, location, zone) => {\n    if (typeof requestAnimationFrame === 'function') {\n        return new Promise((resolve) => {\n            requestAnimationFrame(() => {\n                cleanup(activeRoute, views, viewsSnapshot, location, zone);\n                resolve();\n            });\n        });\n    }\n    return Promise.resolve();\n};\nconst cleanup = (activeRoute, views, viewsSnapshot, location, zone) => {\n    /**\n     * Re-enter the Angular zone when destroying page components. This will allow\n     * lifecycle events (`ngOnDestroy`) to be run inside the Angular zone.\n     */\n    zone.run(() => viewsSnapshot.filter((view) => !views.includes(view)).forEach(destroyView));\n    views.forEach((view) => {\n        /**\n         * In the event that a user navigated multiple\n         * times in rapid succession, we want to make sure\n         * we don't pre-emptively detach a view while\n         * it is in mid-transition.\n         *\n         * In this instance we also do not care about query\n         * params or fragments as it will be the same view regardless\n         */\n        const locationWithoutParams = location.path().split('?')[0];\n        const locationWithoutFragment = locationWithoutParams.split('#')[0];\n        if (view !== activeRoute && view.url !== locationWithoutFragment) {\n            const element = view.element;\n            element.setAttribute('aria-hidden', 'true');\n            element.classList.add('ion-page-hidden');\n            view.ref.changeDetectorRef.detach();\n        }\n    });\n};\n\n// TODO(FW-2827): types\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass IonRouterOutlet {\n    constructor(name, tabs, commonLocation, elementRef, router, zone, activatedRoute, parentOutlet) {\n        this.parentOutlet = parentOutlet;\n        this.activatedView = null;\n        // Maintain map of activated route proxies for each component instance\n        this.proxyMap = new WeakMap();\n        // Keep the latest activated route in a subject for the proxy routes to switch map to\n        this.currentActivatedRoute$ = new BehaviorSubject(null);\n        this.activated = null;\n        this._activatedRoute = null;\n        /**\n         * The name of the outlet\n         */\n        this.name = PRIMARY_OUTLET;\n        /** @internal */\n        this.stackWillChange = new EventEmitter();\n        /** @internal */\n        this.stackDidChange = new EventEmitter();\n        // eslint-disable-next-line @angular-eslint/no-output-rename\n        this.activateEvents = new EventEmitter();\n        // eslint-disable-next-line @angular-eslint/no-output-rename\n        this.deactivateEvents = new EventEmitter();\n        this.parentContexts = inject(ChildrenOutletContexts);\n        this.location = inject(ViewContainerRef);\n        this.environmentInjector = inject(EnvironmentInjector);\n        this.inputBinder = inject(INPUT_BINDER, { optional: true });\n        /** @nodoc */\n        this.supportsBindingToComponentInputs = true;\n        // Ionic providers\n        this.config = inject(Config);\n        this.navCtrl = inject(NavController);\n        this.nativeEl = elementRef.nativeElement;\n        this.name = name || PRIMARY_OUTLET;\n        this.tabsPrefix = tabs === 'true' ? getUrl(router, activatedRoute) : undefined;\n        this.stackCtrl = new StackController(this.tabsPrefix, this.nativeEl, router, this.navCtrl, zone, commonLocation);\n        this.parentContexts.onChildOutletCreated(this.name, this);\n    }\n    /** @internal */\n    get activatedComponentRef() {\n        return this.activated;\n    }\n    set animation(animation) {\n        this.nativeEl.animation = animation;\n    }\n    set animated(animated) {\n        this.nativeEl.animated = animated;\n    }\n    set swipeGesture(swipe) {\n        this._swipeGesture = swipe;\n        this.nativeEl.swipeHandler = swipe\n            ? {\n                canStart: () => this.stackCtrl.canGoBack(1) && !this.stackCtrl.hasRunningTask(),\n                onStart: () => this.stackCtrl.startBackTransition(),\n                onEnd: (shouldContinue) => this.stackCtrl.endBackTransition(shouldContinue),\n            }\n            : undefined;\n    }\n    ngOnDestroy() {\n        this.stackCtrl.destroy();\n        this.inputBinder?.unsubscribeFromRouteData(this);\n    }\n    getContext() {\n        return this.parentContexts.getContext(this.name);\n    }\n    ngOnInit() {\n        this.initializeOutletWithName();\n    }\n    // Note: Ionic deviates from the Angular Router implementation here\n    initializeOutletWithName() {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            const context = this.getContext();\n            if (context?.route) {\n                this.activateWith(context.route, context.injector);\n            }\n        }\n        new Promise((resolve) => componentOnReady(this.nativeEl, resolve)).then(() => {\n            if (this._swipeGesture === undefined) {\n                this.swipeGesture = this.config.getBoolean('swipeBackEnabled', this.nativeEl.mode === 'ios');\n            }\n        });\n    }\n    get isActivated() {\n        return !!this.activated;\n    }\n    get component() {\n        if (!this.activated) {\n            throw new Error('Outlet is not activated');\n        }\n        return this.activated.instance;\n    }\n    get activatedRoute() {\n        if (!this.activated) {\n            throw new Error('Outlet is not activated');\n        }\n        return this._activatedRoute;\n    }\n    get activatedRouteData() {\n        if (this._activatedRoute) {\n            return this._activatedRoute.snapshot.data;\n        }\n        return {};\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     */\n    detach() {\n        throw new Error('incompatible reuse strategy');\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    attach(_ref, _activatedRoute) {\n        throw new Error('incompatible reuse strategy');\n    }\n    deactivate() {\n        if (this.activated) {\n            if (this.activatedView) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const context = this.getContext();\n                this.activatedView.savedData = new Map(context.children['contexts']);\n                /**\n                 * Angular v11.2.10 introduced a change\n                 * where this route context is cleared out when\n                 * a router-outlet is deactivated, However,\n                 * we need this route information in order to\n                 * return a user back to the correct tab when\n                 * leaving and then going back to the tab context.\n                 */\n                const primaryOutlet = this.activatedView.savedData.get('primary');\n                if (primaryOutlet && context.route) {\n                    primaryOutlet.route = { ...context.route };\n                }\n                /**\n                 * Ensure we are saving the NavigationExtras\n                 * data otherwise it will be lost\n                 */\n                this.activatedView.savedExtras = {};\n                if (context.route) {\n                    const contextSnapshot = context.route.snapshot;\n                    this.activatedView.savedExtras.queryParams = contextSnapshot.queryParams;\n                    this.activatedView.savedExtras.fragment = contextSnapshot.fragment;\n                }\n            }\n            const c = this.component;\n            this.activatedView = null;\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    }\n    activateWith(activatedRoute, environmentInjector) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        let cmpRef;\n        let enteringView = this.stackCtrl.getExistingView(activatedRoute);\n        if (enteringView) {\n            cmpRef = this.activated = enteringView.ref;\n            const saved = enteringView.savedData;\n            if (saved) {\n                // self-restore\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const context = this.getContext();\n                context.children['contexts'] = saved;\n            }\n            // Updated activated route proxy for this component\n            this.updateActivatedRouteProxy(cmpRef.instance, activatedRoute);\n        }\n        else {\n            const snapshot = activatedRoute._futureSnapshot;\n            /**\n             * Angular 14 introduces a new `loadComponent` property to the route config.\n             * This function will assign a `component` property to the route snapshot.\n             * We check for the presence of this property to determine if the route is\n             * using standalone components.\n             */\n            const childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n            // We create an activated route proxy object that will maintain future updates for this component\n            // over its lifecycle in the stack.\n            const component$ = new BehaviorSubject(null);\n            const activatedRouteProxy = this.createActivatedRouteProxy(component$, activatedRoute);\n            const injector = new OutletInjector(activatedRouteProxy, childContexts, this.location.injector);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const component = snapshot.routeConfig.component ?? snapshot.component;\n            cmpRef = this.activated = this.location.createComponent(component, {\n                index: this.location.length,\n                injector,\n                environmentInjector: environmentInjector ?? this.environmentInjector,\n            });\n            // Once the component is created we can push it to our local subject supplied to the proxy\n            component$.next(cmpRef.instance);\n            // Calling `markForCheck` to make sure we will run the change detection when the\n            // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n            enteringView = this.stackCtrl.createView(this.activated, activatedRoute);\n            // Store references to the proxy by component\n            this.proxyMap.set(cmpRef.instance, activatedRouteProxy);\n            this.currentActivatedRoute$.next({ component: cmpRef.instance, activatedRoute });\n        }\n        this.inputBinder?.bindActivatedRouteToOutletComponent(this);\n        this.activatedView = enteringView;\n        /**\n         * The top outlet is set prior to the entering view's transition completing,\n         * so that when we have nested outlets (e.g. ion-tabs inside an ion-router-outlet),\n         * the tabs outlet will be assigned as the top outlet when a view inside tabs is\n         * activated.\n         *\n         * In this scenario, activeWith is called for both the tabs and the root router outlet.\n         * To avoid a race condition, we assign the top outlet synchronously.\n         */\n        this.navCtrl.setTopOutlet(this);\n        const leavingView = this.stackCtrl.getActiveView();\n        this.stackWillChange.emit({\n            enteringView,\n            tabSwitch: isTabSwitch(enteringView, leavingView),\n        });\n        this.stackCtrl.setActive(enteringView).then((data) => {\n            this.activateEvents.emit(cmpRef.instance);\n            this.stackDidChange.emit(data);\n        });\n    }\n    /**\n     * Returns `true` if there are pages in the stack to go back.\n     */\n    canGoBack(deep = 1, stackId) {\n        return this.stackCtrl.canGoBack(deep, stackId);\n    }\n    /**\n     * Resolves to `true` if it the outlet was able to sucessfully pop the last N pages.\n     */\n    pop(deep = 1, stackId) {\n        return this.stackCtrl.pop(deep, stackId);\n    }\n    /**\n     * Returns the URL of the active page of each stack.\n     */\n    getLastUrl(stackId) {\n        const active = this.stackCtrl.getLastUrl(stackId);\n        return active ? active.url : undefined;\n    }\n    /**\n     * Returns the RouteView of the active page of each stack.\n     * @internal\n     */\n    getLastRouteView(stackId) {\n        return this.stackCtrl.getLastUrl(stackId);\n    }\n    /**\n     * Returns the root view in the tab stack.\n     * @internal\n     */\n    getRootView(stackId) {\n        return this.stackCtrl.getRootUrl(stackId);\n    }\n    /**\n     * Returns the active stack ID. In the context of ion-tabs, it means the active tab.\n     */\n    getActiveStackId() {\n        return this.stackCtrl.getActiveStackId();\n    }\n    /**\n     * Since the activated route can change over the life time of a component in an ion router outlet, we create\n     * a proxy so that we can update the values over time as a user navigates back to components already in the stack.\n     */\n    createActivatedRouteProxy(component$, activatedRoute) {\n        const proxy = new ActivatedRoute();\n        proxy._futureSnapshot = activatedRoute._futureSnapshot;\n        proxy._routerState = activatedRoute._routerState;\n        proxy.snapshot = activatedRoute.snapshot;\n        proxy.outlet = activatedRoute.outlet;\n        proxy.component = activatedRoute.component;\n        // Setup wrappers for the observables so consumers don't have to worry about switching to new observables as the state updates\n        proxy._paramMap = this.proxyObservable(component$, 'paramMap');\n        proxy._queryParamMap = this.proxyObservable(component$, 'queryParamMap');\n        proxy.url = this.proxyObservable(component$, 'url');\n        proxy.params = this.proxyObservable(component$, 'params');\n        proxy.queryParams = this.proxyObservable(component$, 'queryParams');\n        proxy.fragment = this.proxyObservable(component$, 'fragment');\n        proxy.data = this.proxyObservable(component$, 'data');\n        return proxy;\n    }\n    /**\n     * Create a wrapped observable that will switch to the latest activated route matched by the given component\n     */\n    proxyObservable(component$, path) {\n        return component$.pipe(\n        // First wait until the component instance is pushed\n        filter((component) => !!component), switchMap((component) => this.currentActivatedRoute$.pipe(filter((current) => current !== null && current.component === component), switchMap((current) => current && current.activatedRoute[path]), distinctUntilChanged())));\n    }\n    /**\n     * Updates the activated route proxy for the given component to the new incoming router state\n     */\n    updateActivatedRouteProxy(component, activatedRoute) {\n        const proxy = this.proxyMap.get(component);\n        if (!proxy) {\n            throw new Error(`Could not find activated route proxy for view`);\n        }\n        proxy._futureSnapshot = activatedRoute._futureSnapshot;\n        proxy._routerState = activatedRoute._routerState;\n        proxy.snapshot = activatedRoute.snapshot;\n        proxy.outlet = activatedRoute.outlet;\n        proxy.component = activatedRoute.component;\n        this.currentActivatedRoute$.next({ component, activatedRoute });\n    }\n}\n/** @nocollapse */ IonRouterOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: IonRouterOutlet, deps: [{ token: 'name', attribute: true }, { token: 'tabs', attribute: true, optional: true }, { token: i1.Location }, { token: i0.ElementRef }, { token: i3.Router }, { token: i0.NgZone }, { token: i3.ActivatedRoute }, { token: IonRouterOutlet, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ IonRouterOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.12\", type: IonRouterOutlet, selector: \"ion-router-outlet\", inputs: { animated: \"animated\", animation: \"animation\", mode: \"mode\", swipeGesture: \"swipeGesture\", name: \"name\" }, outputs: { stackWillChange: \"stackWillChange\", stackDidChange: \"stackDidChange\", activateEvents: \"activate\", deactivateEvents: \"deactivate\" }, exportAs: [\"outlet\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: IonRouterOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ion-router-outlet',\n                    exportAs: 'outlet',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['animated', 'animation', 'mode', 'swipeGesture'],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['name']\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Attribute,\n                    args: ['tabs']\n                }] }, { type: i1.Location }, { type: i0.ElementRef }, { type: i3.Router }, { type: i0.NgZone }, { type: i3.ActivatedRoute }, { type: IonRouterOutlet, decorators: [{\n                    type: SkipSelf\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { name: [{\n                type: Input\n            }], stackWillChange: [{\n                type: Output\n            }], stackDidChange: [{\n                type: Output\n            }], activateEvents: [{\n                type: Output,\n                args: ['activate']\n            }], deactivateEvents: [{\n                type: Output,\n                args: ['deactivate']\n            }] } });\nclass OutletInjector {\n    constructor(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    get(token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    }\n}\n// TODO: FW-4785 - Remove this once Angular 15 support is dropped\nconst INPUT_BINDER = new InjectionToken('');\n/**\n * Injectable used as a tree-shakable provider for opting in to binding router data to component\n * inputs.\n *\n * The RouterOutlet registers itself with this service when an `ActivatedRoute` is attached or\n * activated. When this happens, the service subscribes to the `ActivatedRoute` observables (params,\n * queryParams, data) and sets the inputs of the component using `ComponentRef.setInput`.\n * Importantly, when an input does not have an item in the route data with a matching key, this\n * input is set to `undefined`. If it were not done this way, the previous information would be\n * retained if the data got removed from the route (i.e. if a query parameter is removed).\n *\n * The `RouterOutlet` should unregister itself when destroyed via `unsubscribeFromRouteData` so that\n * the subscriptions are cleaned up.\n */\nclass RoutedComponentInputBinder {\n    constructor() {\n        this.outletDataSubscriptions = new Map();\n    }\n    bindActivatedRouteToOutletComponent(outlet) {\n        this.unsubscribeFromRouteData(outlet);\n        this.subscribeToRouteData(outlet);\n    }\n    unsubscribeFromRouteData(outlet) {\n        this.outletDataSubscriptions.get(outlet)?.unsubscribe();\n        this.outletDataSubscriptions.delete(outlet);\n    }\n    subscribeToRouteData(outlet) {\n        const { activatedRoute } = outlet;\n        const dataSubscription = combineLatest([activatedRoute.queryParams, activatedRoute.params, activatedRoute.data])\n            .pipe(switchMap(([queryParams, params, data], index) => {\n            data = { ...queryParams, ...params, ...data };\n            // Get the first result from the data subscription synchronously so it's available to\n            // the component as soon as possible (and doesn't require a second change detection).\n            if (index === 0) {\n                return of(data);\n            }\n            // Promise.resolve is used to avoid synchronously writing the wrong data when\n            // two of the Observables in the `combineLatest` stream emit one after\n            // another.\n            return Promise.resolve(data);\n        }))\n            .subscribe((data) => {\n            // Outlet may have been deactivated or changed names to be associated with a different\n            // route\n            if (!outlet.isActivated ||\n                !outlet.activatedComponentRef ||\n                outlet.activatedRoute !== activatedRoute ||\n                activatedRoute.component === null) {\n                this.unsubscribeFromRouteData(outlet);\n                return;\n            }\n            const mirror = reflectComponentType(activatedRoute.component);\n            if (!mirror) {\n                this.unsubscribeFromRouteData(outlet);\n                return;\n            }\n            for (const { templateName } of mirror.inputs) {\n                outlet.activatedComponentRef.setInput(templateName, data[templateName]);\n            }\n        });\n        this.outletDataSubscriptions.set(outlet, dataSubscription);\n    }\n}\n/** @nocollapse */ RoutedComponentInputBinder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: RoutedComponentInputBinder, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ RoutedComponentInputBinder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: RoutedComponentInputBinder });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: RoutedComponentInputBinder, decorators: [{\n            type: Injectable\n        }] });\nconst provideComponentInputBinding = () => {\n    return {\n        provide: INPUT_BINDER,\n        useFactory: componentInputBindingFactory,\n        deps: [Router],\n    };\n};\nfunction componentInputBindingFactory(router) {\n    /**\n     * We cast the router to any here, since the componentInputBindingEnabled\n     * property is not available until Angular v16.\n     */\n    if (router?.componentInputBindingEnabled) {\n        return new RoutedComponentInputBinder();\n    }\n    return null;\n}\n\nconst BACK_BUTTON_INPUTS = ['color', 'defaultHref', 'disabled', 'icon', 'mode', 'routerAnimation', 'text', 'type'];\nlet IonBackButton = class IonBackButton {\n    constructor(routerOutlet, navCtrl, config, r, z, c) {\n        this.routerOutlet = routerOutlet;\n        this.navCtrl = navCtrl;\n        this.config = config;\n        this.r = r;\n        this.z = z;\n        c.detach();\n        this.el = this.r.nativeElement;\n    }\n    /**\n     * @internal\n     */\n    onClick(ev) {\n        const defaultHref = this.defaultHref || this.config.get('backButtonDefaultHref');\n        if (this.routerOutlet?.canGoBack()) {\n            this.navCtrl.setDirection('back', undefined, undefined, this.routerAnimation);\n            this.routerOutlet.pop();\n            ev.preventDefault();\n        }\n        else if (defaultHref != null) {\n            this.navCtrl.navigateBack(defaultHref, { animation: this.routerAnimation });\n            ev.preventDefault();\n        }\n    }\n};\n/** @nocollapse */ IonBackButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: IonBackButton, deps: [{ token: IonRouterOutlet, optional: true }, { token: NavController }, { token: Config }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ IonBackButton.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.12\", type: IonBackButton, inputs: { color: \"color\", defaultHref: \"defaultHref\", disabled: \"disabled\", icon: \"icon\", mode: \"mode\", routerAnimation: \"routerAnimation\", text: \"text\", type: \"type\" }, host: { listeners: { \"click\": \"onClick($event)\" } }, ngImport: i0 });\nIonBackButton = __decorate([\n    ProxyCmp({\n        inputs: BACK_BUTTON_INPUTS,\n    })\n], IonBackButton);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: IonBackButton, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: BACK_BUTTON_INPUTS,\n                }]\n        }], ctorParameters: function () { return [{ type: IonRouterOutlet, decorators: [{\n                    type: Optional\n                }] }, { type: NavController }, { type: Config }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { defaultHref: [{\n                type: Input\n            }], routerAnimation: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\n\n/**\n * Adds support for Ionic routing directions and animations to the base Angular router link directive.\n *\n * When the router link is clicked, the directive will assign the direction and\n * animation so that the routing integration will transition correctly.\n */\nclass RouterLinkDelegateDirective {\n    constructor(locationStrategy, navCtrl, elementRef, router, routerLink) {\n        this.locationStrategy = locationStrategy;\n        this.navCtrl = navCtrl;\n        this.elementRef = elementRef;\n        this.router = router;\n        this.routerLink = routerLink;\n        this.routerDirection = 'forward';\n    }\n    ngOnInit() {\n        this.updateTargetUrlAndHref();\n    }\n    ngOnChanges() {\n        this.updateTargetUrlAndHref();\n    }\n    updateTargetUrlAndHref() {\n        if (this.routerLink?.urlTree) {\n            const href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.routerLink.urlTree));\n            this.elementRef.nativeElement.href = href;\n        }\n    }\n    /**\n     * @internal\n     */\n    onClick(ev) {\n        this.navCtrl.setDirection(this.routerDirection, undefined, undefined, this.routerAnimation);\n        /**\n         * This prevents the browser from\n         * performing a page reload when pressing\n         * an Ionic component with routerLink.\n         * The page reload interferes with routing\n         * and causes ion-back-button to disappear\n         * since the local history is wiped on reload.\n         */\n        ev.preventDefault();\n    }\n}\n/** @nocollapse */ RouterLinkDelegateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: RouterLinkDelegateDirective, deps: [{ token: i1.LocationStrategy }, { token: NavController }, { token: i0.ElementRef }, { token: i3.Router }, { token: i3.RouterLink, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ RouterLinkDelegateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.12\", type: RouterLinkDelegateDirective, selector: \":not(a):not(area)[routerLink]\", inputs: { routerDirection: \"routerDirection\", routerAnimation: \"routerAnimation\" }, host: { listeners: { \"click\": \"onClick($event)\" } }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: RouterLinkDelegateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: ':not(a):not(area)[routerLink]',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocationStrategy }, { type: NavController }, { type: i0.ElementRef }, { type: i3.Router }, { type: i3.RouterLink, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { routerDirection: [{\n                type: Input\n            }], routerAnimation: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\nclass RouterLinkWithHrefDelegateDirective {\n    constructor(locationStrategy, navCtrl, elementRef, router, routerLink) {\n        this.locationStrategy = locationStrategy;\n        this.navCtrl = navCtrl;\n        this.elementRef = elementRef;\n        this.router = router;\n        this.routerLink = routerLink;\n        this.routerDirection = 'forward';\n    }\n    ngOnInit() {\n        this.updateTargetUrlAndHref();\n    }\n    ngOnChanges() {\n        this.updateTargetUrlAndHref();\n    }\n    updateTargetUrlAndHref() {\n        if (this.routerLink?.urlTree) {\n            const href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.routerLink.urlTree));\n            this.elementRef.nativeElement.href = href;\n        }\n    }\n    /**\n     * @internal\n     */\n    onClick() {\n        this.navCtrl.setDirection(this.routerDirection, undefined, undefined, this.routerAnimation);\n    }\n}\n/** @nocollapse */ RouterLinkWithHrefDelegateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: RouterLinkWithHrefDelegateDirective, deps: [{ token: i1.LocationStrategy }, { token: NavController }, { token: i0.ElementRef }, { token: i3.Router }, { token: i3.RouterLink, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ RouterLinkWithHrefDelegateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.12\", type: RouterLinkWithHrefDelegateDirective, selector: \"a[routerLink],area[routerLink]\", inputs: { routerDirection: \"routerDirection\", routerAnimation: \"routerAnimation\" }, host: { listeners: { \"click\": \"onClick()\" } }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: RouterLinkWithHrefDelegateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'a[routerLink],area[routerLink]',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocationStrategy }, { type: NavController }, { type: i0.ElementRef }, { type: i3.Router }, { type: i3.RouterLink, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { routerDirection: [{\n                type: Input\n            }], routerAnimation: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\n\nconst NAV_INPUTS = ['animated', 'animation', 'root', 'rootParams', 'swipeGesture'];\nconst NAV_METHODS = [\n    'push',\n    'insert',\n    'insertPages',\n    'pop',\n    'popTo',\n    'popToRoot',\n    'removeIndex',\n    'setRoot',\n    'setPages',\n    'getActive',\n    'getByIndex',\n    'canGoBack',\n    'getPrevious',\n];\nlet IonNav = class IonNav {\n    constructor(ref, environmentInjector, injector, angularDelegate, z, c) {\n        this.z = z;\n        c.detach();\n        this.el = ref.nativeElement;\n        ref.nativeElement.delegate = angularDelegate.create(environmentInjector, injector);\n        proxyOutputs(this, this.el, ['ionNavDidChange', 'ionNavWillChange']);\n    }\n};\n/** @nocollapse */ IonNav.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: IonNav, deps: [{ token: i0.ElementRef }, { token: i0.EnvironmentInjector }, { token: i0.Injector }, { token: AngularDelegate }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ IonNav.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.12\", type: IonNav, inputs: { animated: \"animated\", animation: \"animation\", root: \"root\", rootParams: \"rootParams\", swipeGesture: \"swipeGesture\" }, ngImport: i0 });\nIonNav = __decorate([\n    ProxyCmp({\n        inputs: NAV_INPUTS,\n        methods: NAV_METHODS,\n    })\n], IonNav);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: IonNav, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: NAV_INPUTS,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.EnvironmentInjector }, { type: i0.Injector }, { type: AngularDelegate }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }]; } });\n\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass IonTabs {\n    constructor(navCtrl) {\n        this.navCtrl = navCtrl;\n        /**\n         * Emitted before the tab view is changed.\n         */\n        this.ionTabsWillChange = new EventEmitter();\n        /**\n         * Emitted after the tab view is changed.\n         */\n        this.ionTabsDidChange = new EventEmitter();\n        this.tabBarSlot = 'bottom';\n    }\n    ngAfterContentInit() {\n        this.detectSlotChanges();\n    }\n    ngAfterContentChecked() {\n        this.detectSlotChanges();\n    }\n    /**\n     * @internal\n     */\n    onStackWillChange({ enteringView, tabSwitch }) {\n        const stackId = enteringView.stackId;\n        if (tabSwitch && stackId !== undefined) {\n            this.ionTabsWillChange.emit({ tab: stackId });\n        }\n    }\n    /**\n     * @internal\n     */\n    onStackDidChange({ enteringView, tabSwitch }) {\n        const stackId = enteringView.stackId;\n        if (tabSwitch && stackId !== undefined) {\n            if (this.tabBar) {\n                this.tabBar.selectedTab = stackId;\n            }\n            this.ionTabsDidChange.emit({ tab: stackId });\n        }\n    }\n    /**\n     * When a tab button is clicked, there are several scenarios:\n     * 1. If the selected tab is currently active (the tab button has been clicked\n     *    again), then it should go to the root view for that tab.\n     *\n     *   a. Get the saved root view from the router outlet. If the saved root view\n     *      matches the tabRootUrl, set the route view to this view including the\n     *      navigation extras.\n     *   b. If the saved root view from the router outlet does\n     *      not match, navigate to the tabRootUrl. No navigation extras are\n     *      included.\n     *\n     * 2. If the current tab tab is not currently selected, get the last route\n     *    view from the router outlet.\n     *\n     *   a. If the last route view exists, navigate to that view including any\n     *      navigation extras\n     *   b. If the last route view doesn't exist, then navigate\n     *      to the default tabRootUrl\n     */\n    select(tabOrEvent) {\n        const isTabString = typeof tabOrEvent === 'string';\n        const tab = isTabString ? tabOrEvent : tabOrEvent.detail.tab;\n        const alreadySelected = this.outlet.getActiveStackId() === tab;\n        const tabRootUrl = `${this.outlet.tabsPrefix}/${tab}`;\n        /**\n         * If this is a nested tab, prevent the event\n         * from bubbling otherwise the outer tabs\n         * will respond to this event too, causing\n         * the app to get directed to the wrong place.\n         */\n        if (!isTabString) {\n            tabOrEvent.stopPropagation();\n        }\n        if (alreadySelected) {\n            const activeStackId = this.outlet.getActiveStackId();\n            const activeView = this.outlet.getLastRouteView(activeStackId);\n            // If on root tab, do not navigate to root tab again\n            if (activeView?.url === tabRootUrl) {\n                return;\n            }\n            const rootView = this.outlet.getRootView(tab);\n            const navigationExtras = rootView && tabRootUrl === rootView.url && rootView.savedExtras;\n            return this.navCtrl.navigateRoot(tabRootUrl, {\n                ...navigationExtras,\n                animated: true,\n                animationDirection: 'back',\n            });\n        }\n        else {\n            const lastRoute = this.outlet.getLastRouteView(tab);\n            /**\n             * If there is a lastRoute, goto that, otherwise goto the fallback url of the\n             * selected tab\n             */\n            const url = lastRoute?.url || tabRootUrl;\n            const navigationExtras = lastRoute?.savedExtras;\n            return this.navCtrl.navigateRoot(url, {\n                ...navigationExtras,\n                animated: true,\n                animationDirection: 'back',\n            });\n        }\n    }\n    getSelected() {\n        return this.outlet.getActiveStackId();\n    }\n    /**\n     * Detects changes to the slot attribute of the tab bar.\n     *\n     * If the slot attribute has changed, then the tab bar\n     * should be relocated to the new slot position.\n     */\n    detectSlotChanges() {\n        this.tabBars.forEach((tabBar) => {\n            // el is a protected attribute from the generated component wrapper\n            const currentSlot = tabBar.el.getAttribute('slot');\n            if (currentSlot !== this.tabBarSlot) {\n                this.tabBarSlot = currentSlot;\n                this.relocateTabBar();\n            }\n        });\n    }\n    /**\n     * Relocates the tab bar to the new slot position.\n     */\n    relocateTabBar() {\n        /**\n         * `el` is a protected attribute from the generated component wrapper.\n         * To avoid having to manually create the wrapper for tab bar, we\n         * cast the tab bar to any and access the protected attribute.\n         */\n        const tabBar = this.tabBar.el;\n        if (this.tabBarSlot === 'top') {\n            /**\n             * A tab bar with a slot of \"top\" should be inserted\n             * at the top of the container.\n             */\n            this.tabsInner.nativeElement.before(tabBar);\n        }\n        else {\n            /**\n             * A tab bar with a slot of \"bottom\" or without a slot\n             * should be inserted at the end of the container.\n             */\n            this.tabsInner.nativeElement.after(tabBar);\n        }\n    }\n}\n/** @nocollapse */ IonTabs.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: IonTabs, deps: [{ token: NavController }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ IonTabs.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.12\", type: IonTabs, selector: \"ion-tabs\", outputs: { ionTabsWillChange: \"ionTabsWillChange\", ionTabsDidChange: \"ionTabsDidChange\" }, host: { listeners: { \"ionTabButtonClick\": \"select($event)\" } }, viewQueries: [{ propertyName: \"tabsInner\", first: true, predicate: [\"tabsInner\"], descendants: true, read: ElementRef, static: true }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: IonTabs, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ion-tabs',\n                }]\n        }], ctorParameters: function () { return [{ type: NavController }]; }, propDecorators: { tabsInner: [{\n                type: ViewChild,\n                args: ['tabsInner', { read: ElementRef, static: true }]\n            }], ionTabsWillChange: [{\n                type: Output\n            }], ionTabsDidChange: [{\n                type: Output\n            }], select: [{\n                type: HostListener,\n                args: ['ionTabButtonClick', ['$event']]\n            }] } });\n\nconst raf = (h) => {\n    if (typeof __zone_symbol__requestAnimationFrame === 'function') {\n        return __zone_symbol__requestAnimationFrame(h);\n    }\n    if (typeof requestAnimationFrame === 'function') {\n        return requestAnimationFrame(h);\n    }\n    return setTimeout(h);\n};\n\n// TODO(FW-2827): types\nclass ValueAccessor {\n    constructor(injector, elementRef) {\n        this.injector = injector;\n        this.elementRef = elementRef;\n        this.onChange = () => {\n            /**/\n        };\n        this.onTouched = () => {\n            /**/\n        };\n    }\n    writeValue(value) {\n        this.elementRef.nativeElement.value = this.lastValue = value;\n        setIonicClasses(this.elementRef);\n    }\n    /**\n     * Notifies the ControlValueAccessor of a change in the value of the control.\n     *\n     * This is called by each of the ValueAccessor directives when we want to update\n     * the status and validity of the form control. For example with text components this\n     * is called when the ionInput event is fired. For select components this is called\n     * when the ionChange event is fired.\n     *\n     * This also updates the Ionic form status classes on the element.\n     *\n     * @param el The component element.\n     * @param value The new value of the control.\n     */\n    handleValueChange(el, value) {\n        if (el === this.elementRef.nativeElement) {\n            if (value !== this.lastValue) {\n                this.lastValue = value;\n                this.onChange(value);\n            }\n            setIonicClasses(this.elementRef);\n        }\n    }\n    _handleBlurEvent(el) {\n        if (el === this.elementRef.nativeElement) {\n            this.onTouched();\n            setIonicClasses(this.elementRef);\n        }\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.elementRef.nativeElement.disabled = isDisabled;\n    }\n    ngOnDestroy() {\n        if (this.statusChanges) {\n            this.statusChanges.unsubscribe();\n        }\n    }\n    ngAfterViewInit() {\n        let ngControl;\n        try {\n            ngControl = this.injector.get(NgControl);\n        }\n        catch {\n            /* No FormControl or ngModel binding */\n        }\n        if (!ngControl) {\n            return;\n        }\n        // Listen for changes in validity, disabled, or pending states\n        if (ngControl.statusChanges) {\n            this.statusChanges = ngControl.statusChanges.subscribe(() => setIonicClasses(this.elementRef));\n        }\n        /**\n         * TODO FW-2787: Remove this in favor of https://github.com/angular/angular/issues/10887\n         * whenever it is implemented.\n         */\n        const formControl = ngControl.control;\n        if (formControl) {\n            const methodsToPatch = ['markAsTouched', 'markAllAsTouched', 'markAsUntouched', 'markAsDirty', 'markAsPristine'];\n            methodsToPatch.forEach((method) => {\n                if (typeof formControl[method] !== 'undefined') {\n                    const oldFn = formControl[method].bind(formControl);\n                    formControl[method] = (...params) => {\n                        oldFn(...params);\n                        setIonicClasses(this.elementRef);\n                    };\n                }\n            });\n        }\n    }\n}\n/** @nocollapse */ ValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: ValueAccessor, deps: [{ token: i0.Injector }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ ValueAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.12\", type: ValueAccessor, host: { listeners: { \"ionBlur\": \"_handleBlurEvent($event.target)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: ValueAccessor, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i0.ElementRef }]; }, propDecorators: { _handleBlurEvent: [{\n                type: HostListener,\n                args: ['ionBlur', ['$event.target']]\n            }] } });\nconst setIonicClasses = (element) => {\n    raf(() => {\n        const input = element.nativeElement;\n        const hasValue = input.value != null && input.value.toString().length > 0;\n        const classes = getClasses(input);\n        setClasses(input, classes);\n        const item = input.closest('ion-item');\n        if (item) {\n            if (hasValue) {\n                setClasses(item, [...classes, 'item-has-value']);\n            }\n            else {\n                setClasses(item, classes);\n            }\n        }\n    });\n};\nconst getClasses = (element) => {\n    const classList = element.classList;\n    const classes = [];\n    for (let i = 0; i < classList.length; i++) {\n        const item = classList.item(i);\n        if (item !== null && startsWith(item, 'ng-')) {\n            classes.push(`ion-${item.substring(3)}`);\n        }\n    }\n    return classes;\n};\nconst setClasses = (element, classes) => {\n    const classList = element.classList;\n    classList.remove('ion-valid', 'ion-invalid', 'ion-touched', 'ion-untouched', 'ion-dirty', 'ion-pristine');\n    classList.add(...classes);\n};\nconst startsWith = (input, search) => {\n    return input.substring(0, search.length) === search;\n};\n\n/**\n * Provides a way to customize when activated routes get reused.\n */\nclass IonicRouteStrategy {\n    /**\n     * Whether the given route should detach for later reuse.\n     */\n    shouldDetach(_route) {\n        return false;\n    }\n    /**\n     * Returns `false`, meaning the route (and its subtree) is never reattached\n     */\n    shouldAttach(_route) {\n        return false;\n    }\n    /**\n     * A no-op; the route is never stored since this strategy never detaches routes for later re-use.\n     */\n    store(_route, _detachedTree) {\n        return;\n    }\n    /**\n     * Returns `null` because this strategy does not store routes for later re-use.\n     */\n    retrieve(_route) {\n        return null;\n    }\n    /**\n     * Determines if a route should be reused.\n     * This strategy returns `true` when the future route config and\n     * current route config are identical and all route parameters are identical.\n     */\n    shouldReuseRoute(future, curr) {\n        if (future.routeConfig !== curr.routeConfig) {\n            return false;\n        }\n        // checking router params\n        const futureParams = future.params;\n        const currentParams = curr.params;\n        const keysA = Object.keys(futureParams);\n        const keysB = Object.keys(currentParams);\n        if (keysA.length !== keysB.length) {\n            return false;\n        }\n        // Test for A's keys different from B.\n        for (const key of keysA) {\n            if (currentParams[key] !== futureParams[key]) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\n// TODO(FW-2827): types\nclass OverlayBaseController {\n    constructor(ctrl) {\n        this.ctrl = ctrl;\n    }\n    /**\n     * Creates a new overlay\n     */\n    create(opts) {\n        return this.ctrl.create((opts || {}));\n    }\n    /**\n     * When `id` is not provided, it dismisses the top overlay.\n     */\n    dismiss(data, role, id) {\n        return this.ctrl.dismiss(data, role, id);\n    }\n    /**\n     * Returns the top overlay.\n     */\n    getTop() {\n        return this.ctrl.getTop();\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularDelegate, Config, ConfigToken, DomController, IonBackButton, IonModal, IonNav, IonPopover, IonRouterOutlet, IonTabs, IonicRouteStrategy, MenuController, NavController, NavParams, OverlayBaseController, Platform, ProxyCmp, RouterLinkDelegateDirective, RouterLinkWithHrefDelegateDirective, ValueAccessor, bindLifecycleEvents, provideComponentInputBinding, raf, setIonicClasses };\n"],"mappings":"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AAC;QAC3B,CAAC,EAAE;UAAEK,IAAI,EAAE;QAAK,CAAC,CAAC;MACtB,CAAC,MACI;QACD;QACAL,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIM,EAAEA,CAACC,YAAY,EAAE;IACb,OAAOnF,UAAU,CAAC,IAAI,CAACmD,GAAG,EAAEgC,YAAY,CAAC;EAC7C;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,SAASA,CAAA,EAAG;IACR,OAAOnF,YAAY,CAAC,IAAI,CAACkD,GAAG,CAAC;EACjC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIkC,KAAKA,CAAA,EAAG;IACJ,OAAO,IAAI,CAACR,aAAa;EAC7B;EACA;AACJ;AACA;AACA;AACA;AACA;EACI,IAAIS,KAAKA,CAAA,EAAG;IACR,OAAO,IAAI,CAAC7B,GAAG,CAAC8B,GAAG,KAAK,KAAK;EACjC;EACA;AACJ;AACA;EACIC,aAAaA,CAACC,GAAG,EAAE;IACf,OAAOC,cAAc,CAAC,IAAI,CAACvC,GAAG,CAACwC,QAAQ,CAACC,IAAI,EAAEH,GAAG,CAAC;EACtD;EACA;AACJ;AACA;EACII,WAAWA,CAAA,EAAG;IACV,OAAO,CAAC,IAAI,CAACC,UAAU,CAAC,CAAC;EAC7B;EACA;AACJ;AACA;EACIA,UAAUA,CAAA,EAAG;IAAA,IAAAC,oBAAA,EAAAC,UAAA;IACT,QAAAD,oBAAA,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}